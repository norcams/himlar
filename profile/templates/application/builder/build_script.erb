#!/bin/bash

. <%= @rc_file %>

set -ux

# If the environment variable IMAGEBUILDER_REPORT is true each build script will
# write a machine-readable report of the last build in JSONL format. There will
# also be a dated log file in plain text containing the raw output of
# imagebuilder.
gen_report="${IMAGEBUILDER_REPORT:-false}"
plain_log=/var/log/imagebuilder/<%= @name -%>-build-$(date +"%Y%m%d").log
json_report=/var/log/imagebuilder/<%= @name %>-report.jsonl

# Hack to find packer in /usr/bin/ when run as root
export PATH=/usr/bin:/usr/local/bin:/bin:/usr/local/sbin:/usr/sbin

/opt/imagebuilder/bin/imagebuilder bootstrap \
-a <%= @az %> \
-u <%= @url -%><%= @latest %> \
-c <%= @url -%><%= @checksum_file %> \
-t <%= @checksum %> \
-n '<%= @image_name %>' \
-r <%= @min_ram %> \
-d <%= @min_disk %> \
<% if @efi -%>-e \<% end -%>
-f qcow2 \
| /usr/bin/xargs -I % \
/opt/imagebuilder/bin/imagebuilder build \
-n '<%= @name %>' \
-N '<%= @network %>' \
-s % \
-a <%= @az %> \
-u <%= @username %> \
-f <%= @flavor %> \
-d \
-x \
-v \
--debug &> $plain_log

imagebuilder_ec=$?

# We set the shell's error handling options here to avoid exiting before a
# report has been written
set -eo pipefail

if [ $gen_report == "true" ]; then
  # Write imagebuilder's exit code to imagebuilder report
  jq -Rnc '{"result_imagebuilder": input}' <<< $imagebuilder_ec > $json_report

  # Convert newlines in imagebuilder's output into to literal \n for a
  # single-line value in the report
  awk '{printf "%s\\n", $0}' $plain_log \
  | jq -Rc '{"output_imagebuilder": .}' >> $json_report
fi

# Non-zero exit codes from imagebuilder must be handled manually
if [ $imagebuilder_ec -ne 0 ]; then
  exit 1
fi

# Compress image
filename=/opt/images/public_builds/<%= @name %>-$(date +"%Y%m%d").qcow2
tmp_file=/opt/images/public_builds/<%= @name %>.tmp

mv -f ${filename} ${tmp_file}
qemu-img convert -O qcow2 -c ${tmp_file} ${filename}
rm -f ${tmp_file}

# Find MD5 checksum and create latest link
md5filename=${filename%%\.qcow2}.md5
md5sum ${filename} > ${md5filename}
ln -srf ${md5filename} /opt/images/public_builds/<%= @name %>-latest.md5

# Create latest symlink
ln -srf ${filename} /opt/images/public_builds/<%= @name %>-latest.qcow2

# Remove old images, always keeping the two most recent
find /opt/images/public_builds/ -type f -iname <%= @name %>-20\* | sort -r | tail -n +3 | xargs rm -f

if [ $gen_report == "true" ]; then
  # If we make it to here we assume the build has been successful
  jq -nc '{"result": "success"}' >> $json_report
fi
