---
include:
  default:
    - profile::network::nat
    - profile::base::login

network::interfaces_hash:
  'em1':
    onboot:       'yes'
    bridge:       'br1'
  'em2':
    onboot:       'no'
  'em3':
    onboot:       'yes'
    bridge:       'br0'
  'em4':
    onboot:       'yes'
    ipaddress:    '129.240.121.146'
    netmask:      '255.255.255.0'
    gateway:      '129.240.121.1'
    ipv6init:     'yes'
    ipv6addr:     '2001:700:100:8041::146/64'
    ipv6_defaultgw: '2001:700:100:8041::1'
    defroute:     'yes'
    dns1:         "%{hiera('netcfg_dns_server1')}"
    dns2:         "%{hiera('netcfg_dns_server2')}"
    domain:       'test.iaas.uio.no'
  'br0':
    ipaddress:    "%{hiera('netcfg_mgmt_netpart')}.99"
#    gateway:      '172.28.32.10'
    netmask:      "%{hiera('netcfg_mgmt_netmask')}"
    defroute:     'no'
    onboot:       'yes'
    type:         'Bridge'
#    peerdns:      'yes'
    peerdns:      'no'
    dns1:         "%{hiera('netcfg_dns_server1')}"
    dns2:         "%{hiera('netcfg_dns_server2')}"
    domain:       "%{hiera('domain_mgmt')}"
  'br1':
    onboot:       'yes'
    type:         'Bridge'
    ipaddress:    "%{hiera('netcfg_trp_netpart')}.99"
    netmask:      "%{hiera('netcfg_trp_netmask')}"
    defroute:     'no'
    bridge_stp:   'off'
  'br2':
    onboot:       'yes'
    type:         'Bridge'
    ipaddress:    '192.168.122.1'
    netmask:      '255.255.255.0'
    ipv6init:     'yes'
    ipv6addr:     'fd30::1/64'
    defroute:     'no'
    bridge_stp:   'off'

# NAT
profile::network::nat::enable_snat:  true
profile::network::nat::source:       "%{hiera('netcfg_public_netpart')}.0/%{hiera('netcfg_public_netmask')}"
profile::network::nat::enable_snat6: true
profile::network::nat::source6:      "%{hiera('netcfg_public_netpart6')}::/%{hiera('netcfg_public_netmask6')}"
profile::network::nat::outiface:     'em4'

profile::network::services::ntp_server: false

lvm::volume_groups:
  vg_ext:
    physical_volumes:
      - /dev/sdb3
    logical_volumes:
      lv_ext:
        fs_type:   xfs
        mountpath: "/var/lib/libvirt/images"

# route to public net via leaf-01
# (test02 is a special case since leaf runs inside this node)
profile::base::network::routes:
  'br2':
    'ipaddress': [ 'fd34::', '10.100.200.0', ]
    'netmask':   [ '64', '255.255.255.0', ]
    'gateway':   [ 'fd30::2', '192.168.122.2', ]
    'table':     [ 'main', 'main', ]
    'family':    [ 'inet6', 'inet4', ]

named_interfaces::config:
  mgmt:
    - br0
  trp:
    - br1
  public:
    - em4

# SSH access
accounts::accounts:
  'mikaeld':
    ensure: present
  'raymond':
    ensure: present
    authorized_keys: [ 'raymond_uib', 'raymond_home']
  'torldre':
    ensure: present
  'trondham':
    ensure: present
  'andersv':
    ensure: present
  'tannazn':
    ensure: present
  'lennart':
    ensure: present
    authorized_keys: [ 'lennart_uib', 'lennart_home']
  'erikberg':
    ensure: present

googleauthenticator::pam::modules:
  sshd:
    mode: wheel-only

googleauthenticator::pam::mode::modes:
  wheel-only:
    condition: 'user ingroup wheel'
    nullok: false

ssh::server::options:
  # Need this for 2FA (saz-ssh-module disables by default)
  ChallengeResponseAuthentication: 'yes'
  # The second publickey is until the pam files are fixed
  AuthenticationMethods: 'publickey,keyboard-interactive:pam'
  # Explicitly enable the required methods
  UsePAM: 'yes'
  PasswordAuthentication: 'no'
  PubKeyAuthentication: 'yes'
  # No 2FA possible with iaas from mgmt
  "Match User iaas Address %{hiera('netcfg_mgmt_netpart')}.0/24":
    AuthenticationMethods: 'publickey'

# SSH from everywhere
profile::firewall::pre::ssh_settings:
  source: "0.0.0.0/0"

# SSH from ipv6
profile::firewall::pre::manage_ipv6_ssh: true
