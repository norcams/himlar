---
# With direct access to metric the browser will need to connect to the
# public metric endpoint using domain name. 
profile::monitoring::grafana::datasource:
  graphite:
    grafana_url:        "http://%{::ipaddress_mgmt1}:8080"
    grafana_user:       'admin'
    grafana_password:   "%{hiera('grafana_admin_password')}"
    type:               'graphite'
    url:                "http://%{::ipaddress_mgmt1}"
    access_mode:        'proxy'
    is_default:          true
  metric:
    grafana_url:        "http://%{::ipaddress_mgmt1}:8080"
    grafana_user:       'admin'
    grafana_password:   "%{hiera('grafana_admin_password')}"
    type:               'gnocchixyz-gnocchi-datasource'
    url:                "https://api.%{hiera('domain_frontend')}:5000"
    access_mode:        'direct'
    json_data:
      mode:               'keystone'
      password:           "%{hiera('monitor_metric_password')}"
      username:           'monitor'
      domain:             'default'
      project:            'services'

profile::monitoring::sensu::agent::checks:
  "check-openmanage-%{::location}-controller-01":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-controller-01.%{hiera('domain_mgmt')} -b bat=0:0"
    interval:     300
    subscribers:  ['checks']
  "check-openmanage-%{::location}-controller-02":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-controller-02.%{hiera('domain_mgmt')}"
    interval:     300
    subscribers:  ['checks']
  "check-openmanage-%{::location}-controller-03":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-controller-03.%{hiera('domain_mgmt')} -b bat=0:0"
    interval:     300
    subscribers:  ['checks']
  "check-openmanage-%{::location}-compute-01":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-compute-01.%{hiera('domain_mgmt')}"
    interval:     300
    subscribers:  ['checks']
  "check-openmanage-%{::location}-compute-02":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-compute-02.%{hiera('domain_mgmt')}"
    interval:     300
    subscribers:  ['checks']
  "check-openmanage-%{::location}-compute-03":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-compute-03.%{hiera('domain_mgmt')} -b bat=0:0"
    interval:     300
    subscribers:  ['checks']
  "check-openmanage-%{::location}-storage-01":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-storage-01.%{hiera('domain_mgmt')}"
    interval:     300
    subscribers:  ['checks']
  "check-openmanage-%{::location}-storage-02":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-storage-02.%{hiera('domain_mgmt')} -b bat=0:0"
    interval:     300
    subscribers:  ['checks']
  "check-openmanage-%{::location}-storage-03":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-storage-03.%{hiera('domain_mgmt')}"
    interval:     300
    subscribers:  ['checks']
  "check-openmanage-%{::location}-storage-04":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-storage-04.%{hiera('domain_mgmt')}"
    interval:     300
    subscribers:  ['checks']
  "check-openmanage-%{::location}-storage-05":
    command:      "/usr/lib64/nagios/plugins/check_openmanage -B -s -e --linebreak REG -H %{::location}-storage-05.%{hiera('domain_mgmt')}"
    interval:     300
    subscribers:  ['checks']
