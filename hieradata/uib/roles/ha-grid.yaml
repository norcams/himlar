---
#
# Default interfaces
#
named_interfaces::config:
  mgmt:
    - em1
  public:
    - team1.3

# Allow ports in selinux|
profile::base::selinux::ports:
  grid-https:
    seltype:  'http_port_t'
    protocol: 'tcp'
    port:     18082

corosync::unicast_addresses:
  - "129.177.3.111"
  - "129.177.3.112"

corosync::quorum_members:
  - "%{::location}-ha-grid-01.%{hiera('domain_mgmt')}"
  - "%{::location}-ha-grid-02.%{hiera('domain_mgmt')}"

# Firewall
profile::firewall::rules::custom_rules:
  '451 haproxy http for internal vip1':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    source:       '129.177.0.0/16'
    destination:  "%{hiera('corosync_cluster_vip1')}"
  '452 haproxy http for internal vip2':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    source:       '129.177.0.0/16'
    destination:  "%{hiera('corosync_cluster_vip2')}"
  '453 haproxy http for internal vip3':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    destination:  "%{hiera('corosync_cluster_vip3')}"
    source:
      - '51.174.15.28/32' # mcb
      - '129.177.6.133/32' # bgo-login
      - '161.4.51.61/32' # k2
      - '161.4.51.62/32' # k2
      - '161.4.51.63/32' # k2
      - '161.4.51.56/32' # k2
      - '161.4.51.57/32' # k2
  '454 haproxy http for internal vip4':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    destination:  "%{hiera('corosync_cluster_vip4')}"
    source:
      - '51.174.15.28/32' # mcb
      - '129.177.6.133/32' # bgo-login
      - '161.4.51.61/32' # k2
      - '161.4.51.62/32' # k2
      - '161.4.51.63/32' # k2
      - '161.4.51.56/32' # k2
      - '161.4.51.57/32' # k2
  '455 haproxy status public':
    proto:        'tcp'
    dport:        ['9000']
    source:
      - '129.177.0.128/25'
      - '129.177.6.133/32' # bgo-login
    destination:  '%{::ipaddress_public1}'
  '456 haproxy status mgmt':
    proto:        'tcp'
    dport:        ['9000']
    source:       '172.31.0.10/32' #bgo-login
    destination:  '%{::ipaddress_mgmt1}'


corosync_cluster_node1:   "%{::location}-ha-grid-01.%{hiera('domain_mgmt')}"
corosync_cluster_node2:   "%{::location}-ha-grid-02.%{hiera('domain_mgmt')}"

corosync_cluster_vip1:    "129.177.3.113" # gridproxy.ha
corosync_cluster_vip2:    "129.177.3.114" # gridproxy.ha
corosync_cluster_vip3:    "129.177.13.170" # pubgridproxy.ha
corosync_cluster_vip4:    "129.177.13.171" # pubgridproxy.ha

profile::highavailability::loadbalancing::haproxy::haproxy_mapfile:
  uib_grid_domains:
    ensure: present
    mappings:
      - 's3.grid.uib.no':                         'uib-https-grid'

profile::highavailability::loadbalancing::haproxy::haproxy_balancermembers:
  'uib-https-grid':
    listening_service:  'uib-https-grid'
    ports:              '18082'
    server_names:
      - 'uib-grid-01.grid.uib.no'
      - 'uib-grid-02.grid.uib.no'
      - 'uib-grid-03.grid.uib.no'
      - 'uib-grid-04.grid.uib.no'
      - 'uib-grid-05.grid.uib.no'
      - 'uib-grid-06.grid.uib.no'
      - 'uib-grid-07.grid.uib.no'
      - 'uib-grid-08.grid.uib.no'
      - 'uib-grid-09.grid.uib.no'
      - 'uib-grid-10.grid.uib.no'
    ipaddresses:
      - '129.177.3.11'
      - '129.177.3.12'
      - '129.177.3.13'
      - '129.177.3.14'
      - '129.177.3.15'
      - '129.177.3.16'
      - '129.177.3.17'
      - '129.177.3.18'
      - '129.177.3.19'
      - '129.177.3.20'
    options:
      - 'check'
      - 'check-ssl'
      - 'verify none'

profile::highavailability::loadbalancing::haproxy::haproxy_backends:
  uib-https-grid:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
      - option:
        - 'httpchk OPTIONS / HTTP/1.1'

profile::highavailability::loadbalancing::haproxy::haproxy_frontends:
  uib-https-grid:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:443": []
      "%{hiera('corosync_cluster_vip2')}:443": []
      "%{hiera('corosync_cluster_vip3')}:443": []
      "%{hiera('corosync_cluster_vip4')}:443": []
    options:
      - maxconn:        '5000' # max grid https connections
      - timeout:
        - 'connect 5s'
        - 'client 50s'
        - 'server 50s'
      - option:         'tcplog'
      - tcp-request:
        - 'inspect-delay 5s'
        - 'content accept if { req_ssl_hello_type 1 }'
      - use_backend:    'uib-https-grid'

# Corosync VIP and HAproxy
profile::highavailability::corosync::primitives:
  'gridip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip1')}"
      'cidr_netmask':     '25'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'gridip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip2')}"
      'cidr_netmask':     '25'
    operations:
      'monitor':          { "interval": "10s", "timeout": "20s" }
      'start':            { "interval": "0s", "timeout": "20s" }
      'stop':             { "interval": "0s", "timeout": "20s" }
  'pubip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip3')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'pubip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip4')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'haproxy':
    'primitive_class':    'systemd'
    'primitive_type':     'haproxy'
    'operations':
      'monitor':          { 'interval': '5s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }

profile::highavailability::corosync::locations:
  'gridip_location1':
    primitive:  'gridip1'
    node_name:  "%{hiera('corosync_cluster_node1')}"
    score:      'INFINITY'
  'gridip_location2':
    primitive:  'gridip2'
    node_name:  "%{hiera('corosync_cluster_node2')}"
    score:      'INFINITY'
  'pubdip_location1':
    primitive:  'pubip1'
    node_name:  "%{hiera('corosync_cluster_node1')}"
    score:      'INFINITY'
  'pubip_location2':
    primitive:  'pubip2'
    node_name:  "%{hiera('corosync_cluster_node2')}"
    score:      'INFINITY'

profile::highavailability::corosync::colocations:
  'gridip1_haproxy':
    primitives:   ['clone_haproxy', 'gridip1']
  'gridip2_haproxy':
    primitives:   ['clone_haproxy', 'gridip2']
  'pubip1_haproxy':
    primitives:   ['clone_haproxy', 'pubip1']
  'pubip2_haproxy':
    primitives:   ['clone_haproxy', 'pubip2']
