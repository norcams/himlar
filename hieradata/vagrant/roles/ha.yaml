---
include:
  default:
    - profile::application::openssl

profile::application::openssl::manage_ca_cert: true
profile::application::openssl::certs:
  "apps.%{hiera('domain_public')}":
    cn:     "apps.%{hiera('domain_public')}"
    altnames:
      - "apps.%{hiera('domain_public')}"
    concat: true
  "storage-api.%{hiera('domain_public')}":
    cn: "storage-api.%{hiera('domain_public')}"
    altnames:
      - "storage-api.%{hiera('domain_public')}"
    concat: true

ssl_cert_apps:          "apps.%{hiera('domain_public')}.pem"
ssl_cert_nrec_docs:     "apps.%{hiera('domain_public')}.pem"
ssl_cert_nrec_www:      "apps.%{hiera('domain_public')}.pem"
ssl_cert_nrec:          "apps.%{hiera('domain_public')}.pem"
ssl_cert_apps_admin:    "apps.%{hiera('domain_public')}.pem"
ssl_cert_myprint:       "apps.%{hiera('domain_public')}.pem"
ssl_cert_storage:       "storage-api.%{hiera('domain_public')}.pem"

# Selinux
profile::base::selinux::manage_selinux:         true

# Allow ports in selinux
profile::base::selinux::ports:
  sfb-https:
    seltype:  'http_port_t'
    protocol: 'tcp'
    port:     4443
  ldaps:
    seltype:  'http_port_t'
    protocol: 'tcp'
    port:     636
  ldap:
    seltype:  'http_port_t'
    protocol: 'tcp'
    port:     389
  smtp:
    seltype:  'http_port_t'
    protocol: 'tcp'
    port:     25
  smb:
    seltype:  'http_port_t'
    protocol: 'tcp'
    port:     445
  rpc:
    seltype:  'http_port_t'
    protocol: 'tcp'
    port:     135
  grid-https:
    seltype:  'http_port_t'
    protocol: 'tcp'
    port:     18082


# Only allow these for ssl-https-storage
profile::highavailability::loadbalancing::haproxy::access_list:
  storage-api:
    ips:
      - 129.177.0.0/16 # uib
      - 192.168.0.0/24 # vagrant

# corosync
corosync::unicast_addresses:
  - "%{hiera('netcfg_public_netpart')}.16"
  - "%{hiera('netcfg_public_netpart')}.17"

corosync::quorum_members:
  - "%{hiera('netcfg_public_netpart')}.16"
  - "%{hiera('netcfg_public_netpart')}.17"

corosync_cluster_node1:   "%{::location}-ha-01.%{hiera('domain_mgmt')}"
corosync_cluster_node2:   "%{::location}-ha-02.%{hiera('domain_mgmt')}"

corosync_cluster_vip1:    "%{hiera('netcfg_public_netpart')}.6"
corosync_cluster_vip2:    "%{hiera('netcfg_public_netpart')}.7"
corosync_cluster_vip3:    "%{hiera('netcfg_public_netpart')}.8"
corosync_cluster_vip4:    "%{hiera('netcfg_public_netpart')}.9"
corosync_cluster_vip5:    "%{hiera('netcfg_public_netpart')}.10"
corosync_cluster_vip6:    "%{hiera('netcfg_public_netpart')}.11"

# Firewall rules full access to everything!
profile::firewall::rules::custom_rules:
  '451 haproxy http':
    proto:        'tcp'
    dport:        [ '80', '443' ]
    source:       '0.0.0.0/0'
  '452 haproxy ldap':
    proto:        'tcp'
    dport:        [ '636', '389' ]
    source:       '0.0.0.0/0'
  '453 haproxy smtp':
    proto:        'tcp'
    dport:        [ '25' ]
    source:       '0.0.0.0/0'
  '455 haproxy status public':
    proto:        'tcp'
    dport:        ['9000']
    source:       '0.0.0.0/0'
    destination: '%{::ipaddress_public1}'
  '456 haproxy status mgmt':
    proto:        'tcp'
    dport:        ['9000']
    source:       '0.0.0.0/0'
    destination:  '%{::ipaddress_mgmt1}'

# HAproxy
haproxy::global_options:
  log:          '127.0.0.1 local6 debug alert'
  maxconn:      '10000' # total connections per core
  crt-base:     '/etc/pki/tls/certs'
  tune.ssl.default-dh-param:  2048

haproxy::defaults_options:
  log:          'global'
  stats:        []
  option:       ['dontlognull', 'httplog', 'http-server-close', 'redispatch']
  maxconn:      '2000' # default per frontend
  timeout:
    - 'connect 10s'
    - 'http-keep-alive 10s'
    - 'check 10s'
    - 'http-request 10s'
    - 'client 30s'
    - 'server 30s'
    - 'queue 30s'

profile::highavailability::loadbalancing::haproxy::haproxy_mapfile:
  uib_https_domains:
    ensure: present
    mappings:
      - 'exch.uib.no':                            'uib-https-exch'
      - 'portal.uib.no':                          'uib-https-adm'
      - 'myprint.uib.no':                         'uib-https-myprint'
  uib_http_domains:
    ensure: present
    mappings:
      - 'portal.uib.no':                          'uib-http-adm'
      - 'myprint.uib.no':                         'uib-http-myprint'
  public_https_domains:
    ensure: present
    mappings:
      - 'report.uh-iaas.no':                      'public-https-uh-report'
      - 'status.uh-iaas.no':                      'public-https-uh-status'
      - 'apps.vagrant.iaas.intern':               'public-https-apps-test'
      - 'testlydia.uib.no':                       'public-https-lydia'
  public_http_domains:
    ensure: present
    mappings:
      - 'report.uh-iaas.no':                      'public-https-uh-report'
      - 'status.uh-iaas.no':                      'public-https-uh-status'
      - 'testlydia.uib.no':                       'public-https-lydia'
  ssl_https_domains:
    ensure: present
    mappings:
      - 'apps.uib.no':                            'ssl-https-apps'
      - 'appsanywhere.uib.no':                    'ssl-https-apps'
      - 'storage-api.vagrant.iaas.intern':        'ssl-https-storage'
  ssl_http_domains:
    ensure: present
    mappings:
      - 'apps.uib.no':                            'ssl-http-apps'
      - 'appsanywhere.uib.no':                    'ssl-http-apps'

#
# Copy from uib
#
profile::highavailability::loadbalancing::haproxy::haproxy_balancermembers:
# NREC
  'public-https-uh-status':
    listening_service:  'public-https-uh-status'
    ports:              '443'
    server_names:       ['status-osl', 'status-bgo']
    ipaddresses:        ['158.37.63.250', '158.39.77.250']
    options:            'verify none inter 1000 check check-ssl'
  'public-https-uh-report':
    listening_service:  'public-https-uh-report'
    ports:              '443'
    server_names:       ['report-osl', 'report-bgo']
    ipaddresses:        ['158.37.63.250', '158.39.77.250']
    options:            'verify none inter 1000 check check-ssl'
  'ssl-https-nrec-www':
    listening_service:  'ssl-https-nrec-www'
    ports:              '443'
    server_names:       ['www01']
    ipaddresses:        ['norcams.github.io']
    options:            'verify none inter 1000 check check-ssl ssl'
  'ssl-https-nrec-docs':
    listening_service:  'ssl-https-nrec-docs'
    ports:              '443'
    server_names:       ['docs01']
    ipaddresses:        ['uh-iaas.readthedocs.io']
    options:            'verify none inter 1000 check check-ssl ssl'
# Apps
  'ssl-https-apps':
    listening_service:  'ssl-https-apps'
    ports:              '443'
    server_names:       ['appsanywhere01.uib.no', 'appsanywhere02.uib.no', 'appsanywhere03.uib.no']
    ipaddresses:        ['129.177.150.207', '129.177.150.208', '129.177.150.201']
    options:            'verify none inter 30s check check-ssl ssl'
  # 'public-https-apps':
  #   listening_service:  'public-https-apps'
  #   ports:              '443'
  #   server_names:       ['appsanywhere04.uib.no', 'appsanywhere05.uib.no', 'appsanywhere06.uib.no']
  #   ipaddresses:        ['129.177.150.202', '129.177.150.205', '129.177.150.206']
  #   options:            'check'
  'ssl-https-apps-admin':
    listening_service:  'ssl-https-apps-admin'
    ports:              '443'
    server_names:       ['apps-admin01.uib.no', 'apps-admin02.uib.no']
    ipaddresses:        ['129.177.14.170', '129.177.14.171']
    options:            'verify none inter 120s check check-ssl ssl'
# Exchange
  'uib-https-exch':
    listening_service:  'uib-https-exch'
    ports:              '443'
    server_names:       ['exchange01.uib.no', 'exchange02.uib.no']
    ipaddresses:        ['129.177.14.178','129.177.14.179']
    options:            'check'
# SMTP
  'public-smtp':
    listening_service:  'public-smtp'
    ports:              '25'
    server_names:       ['exchange01.uib.no', 'exchange02.uib.no']
    ipaddresses:        ['129.177.14.178', '129.177.14.179']
    options:
      - 'check'
# Portal
  'uib-https-adm':
    listening_service:  'uib-https-adm'
    ports:              '443'
    server_names:       ['rd-web01.uib.no', 'rd-web02.uib.no']
    ipaddresses:        ['129.177.14.13', '129.177.14.182']
    options:
      - 'check'
  'uib-http-adm':
    listening_service:  'uib-http-adm'
    ports:              '80'
    server_names:       ['rd-web01.uib.no', 'rd-web02.uib.no']
    ipaddresses:        ['129.177.14.13', '129.177.14.182']
    options:
      - 'check'
# LDAP
  'public-ldap-prod':
    listening_service:  'public-ldap-prod'
    ports:              '389'
    server_names:       ['p1ldap01.uib.no', 'p2ldap01.uib.no', 'p1ldap02.uib.no', 'p2ldap02.uib.no']
    ipaddresses:        ['129.177.5.229', '129.177.5.230', '129.177.5.234', '129.177.5.236']
    options:
      - 'check'
  'public-ldaps-prod':
    listening_service:  'public-ldaps-prod'
    ports:              '636'
    server_names:       ['p1ldap01.uib.no', 'p2ldap01.uib.no', 'p1ldap02.uib.no', 'p2ldap02.uib.no']
    ipaddresses:        ['129.177.5.229', '129.177.5.230', '129.177.5.234', '129.177.5.236']
    options:
      - 'check'
  'uib-ldap-test':
    listening_service:  'uib-ldap-test'
    ports:              '389'
    server_names:       ['t1ldap01.uib.no']
    ipaddresses:        ['129.177.5.183']
    options:
      - 'check'
  'uib-ldaps-test':
    listening_service:  'uib-ldaps-test'
    ports:              '636'
    server_names:       ['t1ldap01.uib.no']
    ipaddresses:        ['129.177.5.183']
    options:
      - 'check'
  # myprint
  'ssl-https-myprint':
    listening_service:  'ssl-https-myprint'
    ports:              '443'
    server_names:       ['p1-myprint01.uib.no', 'p2-myprint01.uib.no']
    ipaddresses:        ['129.177.30.26', '129.177.30.27']
    options:            'verify none inter 30s check check-ssl ssl'
  # SMB
  'uib-smb':
    listening_service:  'uib-smb'
    ports:              ['135', '445']
    server_names:       ['p1-print01.uib.no','p2-print01.uib.no']
    ipaddresses:        ['129.177.14.126', '129.177.14.128']
    options:
      - 'check'
  # Storage API
  'ssl-https-storage':
    listening_service:  'ssl-https-storage'
    ports:              '80'
    server_names:       ['storage-api-dev']
    ipaddresses:        ['158.39.201.231']
    options:            'verify none inter 30s check'

profile::highavailability::loadbalancing::haproxy::haproxy_backends:
  # Apps
  ssl-https-apps-admin:
    mode:             'http'
    options:
      - balance:      'leastconn'
      - option:
        - 'forwardfor except 127.0.0.1'
        - 'httpchk GET /jukeboxserver/do/license/token/renew.tok?msid=ping'
      - http-check: 'expect status 200'
      # Session stick table and based on source IP
      - stick-table: 'type ip size 1m expire 1h'
      - stick: 'on src'
      - timeout:
        - 'server 1m'
        - 'queue 1m'
  ssl-https-apps:
    mode:             'http'
    options:
      - balance:      'source'
      - option:
        - 'forwardfor except 127.0.0.1'
        - 'httpchk GET /healthcheck'
      - http-check: 'expect status 200'
      # Session stick table and based on source IP (do not work with nbproc >1)
#      - stick-table: 'type ip size 1m expire 1h'
#      - stick: 'on src'
      - timeout:
        - 'server 1m'
        - 'queue 1m'
  ssl-http-apps-redirect:
    mode:             'http'
    options:
      - balance:      'roundrobin'
      - redirect:     'scheme https if !{ ssl_fc }'
  # NREC
  ssl-https-nrec-www:
    mode:             'http'
    options:
      - balance:      'source'
      - option:
        - 'forwardfor except 127.0.0.1'
      - http-request:
        - 'set-header Host norcams.github.io'
  ssl-https-nrec-docs:
    mode:             'http'
    options:
      - balance:      'source'
      - option:
        - 'forwardfor except 127.0.0.1'
      - http-request:
        - 'set-header Host uh-iaas.readthedocs.io'
  public-http-nrec-redirect:
    mode:             'http'
    options:
      - balance:      'roundrobin'
      - redirect:     'scheme https if !{ ssl_fc }'
  public-http-uh-docs:
    mode:             'http'
    options:
      - redirect:     'code 301 location https://docs.nrec.no'
  public-https-uh-status:
    mode:             'tcp'
    options:
      - balance:      'source'
      - option:
        - 'httpchk HEAD /api/health HTTP/1.1\r\nHost:\ status.uh-iaas.no'
  public-https-uh-report:
    mode:             'tcp'
    options:
      - balance:      'source'
      - option:
        - 'httpchk HEAD /health HTTP/1.1\r\nHost:\ report.uh-iaas.no'
  # LDAP
  public-ldap-prod:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  public-ldaps-prod:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  uib-ldap-test:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  uib-ldaps-test:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  # SMTP
  public-smtp:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  # lydia
  public-https-lydia:
    mode:             'http'
    options:
      - balance:      'source'
      - http-request:
        - 'set-header Host lydia.uib.no'
        - 'redirect location https://lydia.uib.no/behovsmelding/'
  # myprint
  ssl-https-myprint:
    mode:             'http'
    options:
      - balance:      'source'
      - option:
        - 'forwardfor except 127.0.0.1'
      - http-check: 'expect status 200'
      # Session stick table and based on source IP
      - stick-table: 'type ip size 1m expire 1h'
      - stick: 'on src'
  # SMB
  uib-smb:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
      # Session stick table and based on source IP
      - stick-table: 'type ip size 1m expire 1h'
      - stick: 'on src'
  # Exchange
  uib-https-exch:
    mode:             'tcp'
    options:
      - balance:      'source'
  # Portal
  uib-https-adm:
    mode:             'tcp'
    options:
      - balance:      'roundrobin'
      #- tcp-request:  'content reject if { src -f /etc/haproxy/uib_vpn_net.list }'
  uib-http-adm:
    mode:             'tcp'
    options:
      - balance:      'roundrobin'
      #- tcp-request:  'content reject if { src -f /etc/haproxy/uib_vpn_net.list }'
  ssl-https-storage:
    mode:             'http'
    options:
      - http-request: 'deny if !{ src -f /etc/haproxy/storage-api.list }'
#  uib-https-uh-dashboard:
#    mode: 'tcp'
#    options:
#      - balance:      'source'
#      - option:       ['ssl-hello-chk']
#      - stick-table:  'type binary len 32 size 30k expire 30m'
#      - acl:
#        - 'clienthello req_ssl_hello_type 1'
#        - 'serverhello rep_ssl_hello_type 2'
#      - tcp-request:
#        - 'inspect-delay 15s'
#        - 'content reject unless clienthello'
#      - tcp-response:
#        - 'content reject unless serverhello'
#      - stick:
#        - 'on payload_lv(43,1) if clienthello'
#        - 'store-response payload_lv(43,1) if serverhello'

#
# Copy from uib
#
profile::highavailability::loadbalancing::haproxy::haproxy_frontends:
  public-http:
    mode:               'http'
    bind:
      "%{hiera('corosync_cluster_vip1')}:80": []
      "%{hiera('corosync_cluster_vip2')}:80": []
    options:
      - option:         'httplog'
      - use_backend:    '%[req.hdr(host),lower,map(/etc/haproxy/public_http_domains.map)]'
      - capture:        'request header Host len 32' #for debug
  public-https:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:443": []
      "%{hiera('corosync_cluster_vip2')}:443": []
    options:
      - option:         'tcplog'
      - tcp-request:
        - 'inspect-delay 5s'
        - 'content accept if { req_ssl_hello_type 1 }'
      - use_backend:      '%[req_ssl_sni,lower,map(/etc/haproxy/public_https_domains.map)]'
  public-ldap:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:389": []
      "%{hiera('corosync_cluster_vip2')}:389": []
    options:
      - option:         'tcplog'
      - use_backend:    'public-ldap-prod'
  public-ldaps:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:636": []
      "%{hiera('corosync_cluster_vip2')}:636": []
    options:
      - option:         'tcplog'
      - use_backend:    'public-ldaps-prod'
  public-smtp:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:25": []
      "%{hiera('corosync_cluster_vip2')}:25": []
    options:
      - option:         'tcplog'
      - use_backend:    'public-smtp'
  uib-http:
    mode:               'http'
    bind:
      "%{hiera('corosync_cluster_vip3')}:80": []
      "%{hiera('corosync_cluster_vip4')}:80": []
    options:
      - maxconn:        '16000' # max internal http connections
      - option:         'httplog'
      - use_backend:    '%[req.hdr(host),lower,map(/etc/haproxy/uib_http_domains.map)]'
      - capture:        'request header Host len 32' #for debug
  uib-https:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip3')}:443": []
      "%{hiera('corosync_cluster_vip4')}:443": []
    options:
      - maxconn:        '16000' # max internal https connections
      - option:         'tcplog'
      - tcp-request:
        - 'inspect-delay 5s'
        - 'content accept if { req_ssl_hello_type 1 }'
      - use_backend:      '%[req_ssl_sni,lower,map(/etc/haproxy/uib_https_domains.map)]'
  uib-ldap:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip3')}:389": []
      "%{hiera('corosync_cluster_vip4')}:389": []
    options:
      - option:         'tcplog'
      - use_backend:    'uib-ldap-test'
  uib-ldaps:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip3')}:636": []
      "%{hiera('corosync_cluster_vip4')}:636": []
    options:
      - option:         'tcplog'
      - use_backend:    'uib-ldaps-test'
  uib-smb:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip3')}:445": []
      "%{hiera('corosync_cluster_vip4')}:445": []
      "%{hiera('corosync_cluster_vip3')}:135": []
      "%{hiera('corosync_cluster_vip4')}:135": []
    options:
      - option:         'tcplog'
      - use_backend:    'uib-smb'
  ssl-http: #for redirect
    mode:               'http'
    bind:
      "%{hiera('corosync_cluster_vip5')}:80": []
      "%{hiera('corosync_cluster_vip6')}:80": []
    options:
      - option:         'httplog'
      - use_backend:    '%[req.hdr(host),lower,map(/etc/haproxy/ssl_http_domains.map)]'
      - capture:        'request header Host len 32' #for debug
  ssl-https:
    mode:               'http'
    bind:
      "%{hiera('corosync_cluster_vip5')}:443":
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_apps')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_apps_admin')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec_www')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec_docs')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_myprint')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_storage')}"
      "%{hiera('corosync_cluster_vip6')}:443":
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_apps')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_apps_admin')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec_www')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_nrec_docs')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_myprint')}"
        - 'ssl'
        - 'crt'
        - "%{hiera('ssl_cert_storage')}"
    options:
      - option:         'http-server-close'
      - option:         'forwardfor'
      - use_backend:    '%[req.hdr(host),lower,map(/etc/haproxy/ssl_https_domains.map)]'
      # Prevents X-Forwarded-For spoofing
      - http-request:   'del-header ^X-Forwarded-For:.*'
      # - http-request:
      #   - 'add-header X-Forwarded-Proto https if { ssl_fc }'
      #   - 'set-header X-Forwarded-Port %[dst_port]'


# Corosync VIP and HAproxy
profile::highavailability::corosync::primitives:
  'pubip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip1')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'pubip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip2')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'uibip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip3')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'uibip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip4')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'sslip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip5')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { "interval": "10s", "timeout": "20s" }
      'start':            { "interval": "0s", "timeout": "20s" }
      'stop':             { "interval": "0s", "timeout": "20s" }
  'sslip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip6')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { "interval": "10s", "timeout": "20s" }
      'start':            { "interval": "0s", "timeout": "20s" }
      'stop':             { "interval": "0s", "timeout": "20s" }
  'haproxy':
    'primitive_class':    'systemd'
    'primitive_type':     'haproxy'
    'operations':
      'monitor':          { 'interval': '5s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }

profile::highavailability::corosync::locations:
  'pubip_location1':
    primitive:  'pubip1'
    node_name:  "%{hiera('corosync_cluster_node1')}"
    score:      'INFINITY'
  'pubip_location2':
    primitive:  'pubip2'
    node_name:  "%{hiera('corosync_cluster_node2')}"
    score:      'INFINITY'
  'uibip_location1':
    primitive:  'uibip1'
    node_name:  "%{hiera('corosync_cluster_node1')}"
    score:      'INFINITY'
  'uibip_location2':
    primitive:  'uibip2'
    node_name:  "%{hiera('corosync_cluster_node2')}"
    score:      'INFINITY'
  'sslip_location1':
    primitive:  'sslip1'
    node_name:  "%{hiera('corosync_cluster_node1')}"
    score:      'INFINITY'
  'sslip_location2':
    primitive:  'sslip2'
    node_name:  "%{hiera('corosync_cluster_node2')}"
    score:      'INFINITY'

profile::highavailability::corosync::colocations:
  'pubip1_haproxy':
    primitives:   ['clone_haproxy', 'pubip1']
  'pubip2_haproxy':
    primitives:   ['clone_haproxy', 'pubip2']
  'uibip1_haproxy':
    primitives:   ['clone_haproxy', 'uibip1']
  'uibip2_haproxy':
    primitives:   ['clone_haproxy', 'uibip2']
  'sslip1_haproxy':
    primitives:   ['clone_haproxy', 'sslip1']
  'sslip2_haproxy':
    primitives:   ['clone_haproxy', 'sslip2']
