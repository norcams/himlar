---
include:
  default:
    - profile::storage::cephosd
    - profile::storage::cephosd_firewall
    - profile::storage::cephpool
    - profile::base::lvm
    - profile::storage::ceph::pool
    - profile::monitoring::collectd
    - profile::monitoring::collectd::ceph
    - profile::logging::rsyslog::client
  kickstart:
    - profile::base::lvm
  bootstrap:
    - profile::base::lvm
    - profile::storage::cephosd_firewall

# collectd
profile::monitoring::collectd::enable: true
profile::monitoring::collectd::ceph::enable: true

collectd::plugin::processes::processes:
  - "ceph-osd"
collectd::plugin::interface::interfaces:
  - "%{::interface_trp1}"
  - "%{::interface_mgmt1}"

profile::monitoring::collectd::plugins:
  - collectd::plugin::aggregation
  - collectd::plugin::cpu
  - collectd::plugin::disk
  - collectd::plugin::load
  - collectd::plugin::memory
  - collectd::plugin::interface
  - collectd::plugin::processes
  - collectd::plugin::write_graphite

# Override default from modules/ceph.yaml
ceph::profile::params::mon_host:              "%{::netpart_trp1}.89"
ceph::profile::params::mon_initial_members:   '%{::location}-cephmon-object-01'
ceph::profile::params::cluster_network:       "%{::netpart_trp1}.0/%{cidr_trp1}"
ceph::profile::params::public_network:        "%{::netpart_trp1}.0/%{cidr_trp1}"
ceph::profile::params::fsid:                  "%{hiera('ceph_object_client_fsid')}"
ceph::profile::params::osd_journal_size:      '10240'
ceph::profile::params::client_keys:
  'client.admin':
    secret: "%{hiera('ceph_object_client_admin_key')}"
    mode: '0600'
    user: 'ceph'
    group: 'ceph'
    cap_mon: 'allow *'
    cap_osd: 'allow *'
    cap_mgr: 'allow *'
  'client.bootstrap-osd':
    secret: "%{hiera('ceph_object_client_bootstrap_osd_key')}"
    keyring_path: '/var/lib/ceph/bootstrap-osd/ceph.keyring'
    cap_mon: 'allow profile bootstrap-osd'

profile::base::manage_lvm:                           true

profile::base::common::packages:
  'redhat-lsb-core': {}
  'bash-completion': {}
  'jq': {}

profile::storage::cephosd_firewall::manage_firewall: true
profile::storage::cephosd::create_osds:              true

profile::storage::ceph::pool::pools:
  '%{::location}-1.rgw.control':
    size:       3
    tag:          'rgw'
    custom:
      crush_rule: 'hdd'
  '%{::location}-1.rgw.meta':
    size:       3
    tag:          'rgw'
    custom:
      crush_rule: 'hdd'
  '%{::location}-1.rgw.log':
    size:       3
    tag:          'rgw'
    custom:
      crush_rule: 'hdd'
  '%{::location}-1.rgw.buckets.index':
    size:       3
    tag:          'rgw'
    custom:
      crush_rule: 'ssd'
  '%{::location}-1.rgw.buckets.log':
    size:       3
    tag:          'rgw'
    custom:
      crush_rule: 'hdd'
  '%{::location}-1.rgw.buckets.meta':
    size:         3
    tag:          'rgw'
    custom:
      crush_rule: 'hdd'
  # '%{::location}-1.rgw.buckets.cache': # used for tiering
  #   size:         3
  #   custom:
  #     crush_rule: 'ssd'

profile::storage::ceph::pool::ec_pools:
  '%{::location}-1.rgw.buckets.data':
    k_data:     3
    m_code:     2
    tag:        'rgw'
    custom:
      min_size: '4' # this should always be k + 1 in production

# profile::storage::ceph::pool::tiers:
#   rgw-default-cache:
#     storage_pool:       '%{::location}-1.rgw.buckets.data'
#     cache_pool:         '%{::location}-1'.rgw.buckets.cache'
#     custom: # these will be set on cache_pool
#       hit_set_type:     'bloom'
#       hit_set_count:    '12'
#       hit_set_period:   '7200' # 2 hour
#       target_max_bytes: '1073741824' # 1 GB

profile::storage::ceph::pool::crush_rules:
  'hdd':
    rule_device_type: "hdd"
  'ssd':
    rule_device_type: "ssd"

# FIXME:sensu-go
profile::monitoring::sensu::agent::enable_go_agent:   true
profile::monitoring::sensu::agent::enable_agent:      false

# Sensu
sensu::agent::subscriptions:
  - 'base'
  - 'metrics'
  - 'physical'

# Enable extra yum repo and override epel exclude list
profile::base::yumrepo::repo_hash:
  ceph-%{hiera('ceph_version')}:
    ensure: present
  ceph-%{hiera('ceph_version')}-noarch:
    ensure: present
  "%{operatingsystem}-AppStream":
    exclude: 'postgres*'
  epel:
    ensure: present
