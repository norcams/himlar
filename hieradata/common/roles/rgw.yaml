---
include:
  default:
    - profile::openstack::openrc
    - profile::openstack::object::radosgw
    - profile::storage::ceph::config
    - profile::highavailability::loadbalancing::haproxy
    - profile::logging::rsyslog::client

# FIXME:sensu-go
profile::monitoring::sensu::agent::enable_go_agent:   true
profile::monitoring::sensu::agent::enable_agent:      false

# Sensu
sensu::agent::subscriptions:
  - 'base'
  - 'nodes'
  - 'metrics'

profile::base::common::packages:
  'python3-openstackclient': {}
  'bash-completion': {}
  'jq': {}
  'nc': {}

profile::base::selinux::manage_selinux: true

profile::network::interface::manage_dummy: true

profile::highavailability::loadbalancing::haproxy::anycast_enable:      false
profile::highavailability::loadbalancing::haproxy::anycast_service_ip:  "%{hiera('public__ip__object')}"
profile::highavailability::loadbalancing::haproxy::anycast_service_ip6: "%{hiera('public__ipv6__object')}"
profile::highavailability::loadbalancing::haproxy::manage_haproxy:      false
profile::highavailability::loadbalancing::haproxy::manage_firewall:     false
profile::highavailability::loadbalancing::haproxy::manage_firewall6:    false
profile::highavailability::loadbalancing::haproxy::firewall_ports:
  public:    ['443', '8080']
  internal:  []
  mgmt:      []
  limited:   []

# HAproxy
star_api_ssl_pem:         "star.api.%{hiera('domain_public')}.pem"
star_api_ssl_pem2:        "star.api.%{hiera('domain_public2')}.pem"

profile::highavailability::loadbalancing::haproxy::haproxy_frontends:
  frontend_public:
    bind:
      ':::443 v4v6': ['ssl', "crt %{hiera('star_api_ssl_pem')}", "crt %{hiera('star_api_ssl_pem2')}"]
      ':::8080 v4v6': ['ssl', "crt %{hiera('star_api_ssl_pem')}", "crt %{hiera('star_api_ssl_pem2')}"] # FIXME remove when nobody uses 8080
    mode: 'http'
    options:
      - default_backend: 'bk_object'

profile::highavailability::loadbalancing::haproxy::haproxy_backends:
  bk_object:
    mode: 'http'
    options:
      - option:
        - 'tcp-check'

profile::highavailability::loadbalancing::haproxy::haproxy_balancermembers:
  object_primary:
    listening_service:  'bk_object'
    server_names:       "%{::hostname}"
    ipaddresses:        "%{::ipaddress_trp1}"
    ports:              '7480'
    options:            'check'
  object_backup:
    listening_service:  'bk_object'
    server_names:       "%{alias('object__backend__backups')}"
    ipaddresses:        "%{alias('object__backend__backupips')}"
    ports:              '7480'
    options:            'check backup'

haproxy::defaults_options:
  mode:    'http'
  option:  [ 'redispatch', 'forwardfor', 'http-server-close', 'httplog', 'dontlognull']
  retries: '3'
  maxconn: '8192' # per frontend
  balance: 'roundrobin'
  timeout:
    - 'http-request 10s'
    - 'connect 10s'
    - 'check 10s'
    - 'client 1m'
    - 'server 3m'
    - 'queue 1m'

profile::base::selinux::ports:
  object-http:
    seltype:  'http_port_t'
    protocol: 'tcp'
    port:     7480

profile::storage::ceph::config::manage_config: true
profile::storage::ceph::config::config:
  'client.radosgw.%{::hostname}/rgw_enable_usage_log':
    value: false
  'client.radosgw.%{::hostname}/rgw_realm':
    value: 'nrec'
  'client.radosgw.%{::hostname}/rgw_zonegroup':
    value: 'norway'
  'client.radosgw.%{::hostname}/rgw_zone':
    value: '%{::location}-1'
  # 'client.radosgw.%{::hostname}/rgw_enable_static_website':
  #   value: true
  # 'client.radosgw.%{::hostname}/rgw_relaxed_region_enforcement':
  #   value: true


profile::openstack::openrc::password:     "%{hiera('radosgw_api_password')}"
profile::openstack::openrc::username:     'radosgw'
profile::openstack::openrc::project_name: "%{hiera('keystone__service__project')}"

profile::openstack::object::radosgw::manage_firewall: true

# Override default from modules/ceph.yaml
ceph::profile::params::mon_host:                    '%{::netpart_trp1}.89'
ceph::profile::params::mon_initial_members:         '%{::location}-cephmon-object-01'
ceph::profile::params::cluster_network:             '%{::netpart_trp1}.0/%{cidr_trp1}'
ceph::profile::params::public_network:              '%{::netpart_trp1}.0/%{cidr_trp1}'
ceph::profile::params::osd_pool_default_size:       '3'
ceph::profile::params::osd_pool_default_min_size:   '2'
ceph::profile::params::client_keys:
  # 'client.admin':
  #   secret: "%{hiera('ceph_object_client_admin_key')}"
  #   mode: '0600'
  #   user: 'ceph'
  #   group: 'ceph'
  #   cap_mon: 'allow *'
  #   cap_osd: 'allow *'
  #   cap_mgr: 'allow *'
  'client.radosgw.%{::hostname}':
    secret: "%{hiera('ceph_object_client_rgw_key')}"
    mode: '0600'
    user: 'ceph'
    group: 'ceph'
    cap_mon: 'allow rw'
    cap_osd: 'allow rwx'

profile::openstack::object::radosgw::rgw:
  "radosgw.%{::hostname}":
    frontend_type:  'beast'
    rgw_frontends:  "beast endpoint=%{::ipaddress_trp1}:7480"
    rgw_swift_url:  "%{hiera('endpoint__object__public')}"
    rgw_dns_name:   "object.api.%{hiera('domain_public')}"
    user:           'ceph'

profile::openstack::object::radosgw::keystone:
  "radosgw.%{::hostname}":
    rgw_keystone_url:                 "%{hiera('endpoint__identity__public')}"
    rgw_keystone_accepted_roles:      ['object', 'admin']
    rgw_keystone_token_cache_size:    500 # Default in puppet module
    rgw_s3_auth_use_keystone:         true
    rgw_keystone_admin_domain:        "%{hiera('keystone__default__domain')}"
    rgw_keystone_admin_project:       "%{hiera('keystone__service__project')}"
    rgw_keystone_admin_user:          'radosgw'
    rgw_keystone_admin_password:      "%{hiera('radosgw_api_password')}"
    rgw_keystone_implicit_tenants:    true

profile::logging::logrotate::rules:
  ceph:
    path:           '/var/log/ceph/*.log'
    rotate:         7
    rotate_every:   'hour'
    size:           400M
    postrotate:     'killall -q -1 ceph-mon ceph-mgr ceph-mds ceph-osd ceph-fuse radosgw rbd-mirror cephfs-mirror || pkill -1 -x "ceph-mon|ceph-mgr|ceph-mds|ceph-osd|ceph-fuse|radosgw|rbd-mirror|cephfs-mirror" || true'
    sharedscripts:  true
    missingok:      true
    compress:       true
    su:             true
    su_group:       'ceph'

# Enable extra yum repo
profile::base::yumrepo::repo_hash:
  ceph-%{hiera('ceph_version')}:
    ensure: present
  ceph-%{hiera('ceph_version')}-noarch:
    ensure: present
  rdo-release:
    ensure: present
  epel: # should be absent when using RDO, but whitelist can also work
    ensure: present
    includepkgs: 'bird htop bash-completion-extras python-routes python2-bcrypt userspace-rcu lttng-ust liboath libbabeltrace leveldb liboath py-bcrypt python2-bcrypt python36-prettytable python36-requests python36-pyOpenSSL python36-bcrypt python36-six python36-PyYAML python36-dateutil python36-cryptography python36-urllib3 python36-chardet python36-cffi python36-idna python36-pysocks python36-pycparser python36-ply python36-asn1crypto fmt python3-cherrypy python3-zc-lockfile python3-portend python3-cheroot python3-trustme python3-tempora python3-jaraco-functools python3-jaraco thrift'
