---
include:
  default:
    - profile::database::redis
    - profile::monitoring::sensu::server
    - profile::monitoring::graphite
    - profile::monitoring::grafana
    - profile::monitoring::statsd
    - profile::logging::logrotate
    - profile::openstack::openrc
    - profile::messaging::rabbitmq
    - profile::logging::rsyslog::client
    - profile::monitoring::collectd

# collectd
profile::monitoring::collectd::enable: true
collectd::plugin::interface::interfaces:
  - "%{::interface_trp1}"
  - "%{::interface_mgmt1}"
profile::monitoring::collectd::plugins:
  - collectd::plugin::aggregation
  - collectd::plugin::cpu
  - collectd::plugin::disk
  - collectd::plugin::load
  - collectd::plugin::memory
  - collectd::plugin::interface
  - collectd::plugin::write_graphite

profile::messaging::rabbitmq::manage_rsyslog: true

# Sensu
profile::base::common::packages:
  'gcc-c++': {}
  'make': {}
  'bash-completion': {}
  'bash-completion-extras': {}
  'jq': {}
  'python-openstackclient': {}
  'openstack-selinux':      {}
  'nagios-plugins-openmanage': {}

profile::messaging::rabbitmq::users:
  sensu:
    password: "%{hiera('sensu_rabbit_password')}"
  local:
    password: "%{hiera('local_rabbit_password')}"
    tags:     'monitoring'

profile::messaging::rabbitmq::vhosts:
  sensu: {}

profile::messaging::rabbitmq::user_permissions:
  'sensu@sensu':
    configure_permission: '.*'
    write_permission:     '.*'
    read_permission:      '.*'
  'local@sensu':
    read_permission:      '.*'

named_interfaces::config:
  mgmt:
    - eth0

# Grafana and statsd
profile::monitoring::statsd::manage:           true
profile::monitoring::grafana::enable:          true
profile::monitoring::grafana::manage_firewall: true
profile::monitoring::grafana::firewall_extras:
  source: "%{::network_mgmt1}/%{::netmask_mgmt1}"
profile::monitoring::statsd::manage_firewall:  true
profile::monitoring::statsd::firewall_extras:
  source: "%{::network_mgmt1}/%{::netmask_mgmt1}"

grafana_openstack_user: 'monitor'
grafana_openstack_password: "%{hiera('monitor_metric_password')}"

grafana::provisioning_dashboards:
  apiVersion: 1
  providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: true
      options:
        path: '/var/lib/grafana/dashboards'
        puppetsource: 'puppet:///modules/profile/monitoring/grafana/dashboard'

# Sensu server
profile::monitoring::sensu::server::manage_resources: true
sensuclassic::server:              true
sensuclassic::api:                 true
sensuclassic::redis_host:          127.0.0.1

profile::openstack::openrc::password:         "%{hiera('monitor_metric_password')}"
profile::openstack::openrc::username:         'monitor'
profile::openstack::openrc::project_name:     'services'

profile::monitoring::graphite::manage_graphite:  true
profile::monitoring::graphite::age:              '2w'
profile::monitoring::sensu::server::manage_firewall:  true
profile::monitoring::sensu::server::manage_redis:     true
profile::monitoring::sensu::server::firewall_extras:
  source: "%{::network_mgmt1}/%{::netmask_mgmt1}"
profile::monitoring::sensu::server::manage_dashboard: true
profile::monitoring::sensu::server::handlers:
  default:
    type: 'set'
    handlers:
      - slack
  graphite_tcp:
    type: 'tcp'
    socket:
      host: '127.0.0.1'
      port: 2003
    mutator: 'only_check_output'
  slack:
    type:         'pipe'
    command:      'cat'
    filters:
      - normal
      - infrequent

profile::monitoring::sensu::server::filters:
  normal: # for slack only: will only work on interval 60
    negate: true
    attributes:
      check:
        interval: 60
      occurrences: "eval: value != 2 && value % 10 != 0"
  infrequent: # for slack only: will only work on interval 300
    negate: true
    attributes:
      check:
        interval: 300
      occurrences: "eval: value != 1 && value % 10 != 0"

profile::monitoring::sensu::agent::plugins:
  sensu-plugins-http:
    type:         package
    pkg_version:  '3.0.1'
  sensu-plugins-slack:
    type:         package
    pkg_version:  '3.1.1'
  sensu-plugins-rabbitmq:
    type:         package
    pkg_version:  '4.1.1'

# metadata api check
profile::monitoring::sensu::agent::expanded_transform_url: true
profile::monitoring::sensu::agent::expanded_checks:
  - "%{hiera('endpoint__volume__public')}"
  - "%{hiera('endpoint__network__public')}"
  - "%{hiera('endpoint__image__public')}"
  - "%{hiera('endpoint__compute__public')}"
  - "%{hiera('endpoint__identity__public')}"

profile::monitoring::sensu::agent::expanded_defaults:
  command:      "check-http.rb --response-code '(?!([45]0[0-9]))' -r %{hiera('sensu_ssl_cachain')} -u "
  interval:     60
  subscribers:  ['checks']

profile::monitoring::sensu::agent::checks:
  'identity-api-metric':
    type:         'metric'
    command:      "metrics-curl.rb --scheme web.api.identity -u %{hiera('endpoint__identity__public')}"
    interval:     60
    subscribers:  ['metrics']
    handlers:     ['graphite_tcp']
  'compute-api-metric':
    type:         'metric'
    command:      "metrics-curl.rb --scheme web.api.compute -u %{hiera('endpoint__compute__public')}"
    interval:     60
    subscribers:  ['metrics']
    handlers:     ['graphite_tcp']
  'placement-api-metric':
    type:         'metric'
    command:      "metrics-curl.rb --scheme web.api.placement -u %{hiera('endpoint__placement__public')}"
    interval:     60
    subscribers:  ['metrics']
    handlers:     ['graphite_tcp']
  'image-api-metric':
    type:         'metric'
    command:      "metrics-curl.rb --scheme web.api.image -u %{hiera('endpoint__image__public')}"
    interval:     60
    subscribers:  ['metrics']
    handlers:     ['graphite_tcp']
  'volume-api-metric':
    type:         'metric'
    command:      "metrics-curl.rb --scheme web.api.volume -u %{hiera('endpoint__volume__public')}"
    interval:     60
    subscribers:  ['metrics']
    handlers:     ['graphite_tcp']
  'cert-check-api':
    command:      "check-https-cert.rb -c 10 -w 20 -u %{hiera('public__address__api')} %{hiera('sensu_ssl_cachain')}"
    interval:     60
    subscribers:  ['checks']
  'cert-check-dashboard':
    command:      "check-https-cert.rb -c 10 -w 20 -u https://%{hiera('public__address__dashboard')} %{hiera('sensu_ssl_cachain')}"
    interval:     60
    subscribers:  ['checks']
  'cert-check-access':
    command:      "check-https-cert.rb -c 10 -w 20 -u https://%{hiera('public__address__access')} %{hiera('sensu_ssl_cachain')}"
    interval:     60
    subscribers:  ['checks']
  'cert-check-console':
    command:      "check-https-cert.rb -c 10 -w 20 -u https://%{hiera('public__address__console')}:6080 %{hiera('sensu_ssl_cachain')}"
    interval:     60
    subscribers:  ['checks']
  'metrics-rabbitmq-overview':
    type:         'metric'
    command:      "metrics-rabbitmq-overview.rb --scheme mq.%{::hostname} --host %{::ipaddress_mgmt1} --user local --password %{hiera('local_rabbit_password')}"
    interval:     60
    subscribers:  ['metrics']
    handlers:     ['graphite_tcp']
  'metrics-rabbitmq-queue':
    type:         'metric'
    command:      "metrics-rabbitmq-queue.rb --scheme mq.%{::hostname} --host %{::ipaddress_mgmt1} --user local --password %{hiera('local_rabbit_password')}"
    interval:     60
    subscribers:  ['metrics']
    handlers:     ['graphite_tcp']
  'metrics-rabbitmq-exchange':
    type:         'metric'
    command:      "metrics-rabbitmq-exchange.rb --scheme mq.%{::hostname} --host %{::ipaddress_mgmt1} --user local --password %{hiera('local_rabbit_password')}"
    interval:     60
    subscribers:  ['metrics']
    handlers:     ['graphite_tcp']

# logrotate
profile::logging::logrotate::manage_logrotate: true
logrotate::rules:
  sensu_dashboard:
    path:           '/var/log/uchiwa.log'
    rotate:         3
    rotate_every:   weekly
    dateext:        true
    sharedscripts:  true
    missingok:      true
    compress:       true
  syslog:
    path:           ['/var/log/cron', '/var/log/maillog', '/var/log/messages', '/var/log/secure', '/var/log/spooler']
    rotate:         10
    rotate_every:   daily
    postrotate:     '/bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true'
    dateext:        true
    sharedscripts:  true
    missingok:      true
    compress:       true

# rsyslog
profile::logging::rsyslog::client::inputs:
  imfile_rabbitmq:
    priority: 51
    confdir: '/etc/rsyslog.d/'
    target: '51-rabbitmq-inputs.conf'
    type: imfile
    config:
      file:     "/var/log/rabbitmq/rabbit@%{::hostname}.log"
      tag:      'rabbitmq'
      severity: 'info'
      facility: 'local6'

# Enable extra yum repo for openstack client
profile::base::yumrepo::repo_hash:
  rdo-release:
    ensure: present
  grafana:
    ensure: absent
  grafana-oss:
    ensure: present
  epel: # should be absent when using RDO, but whitelist can also work
    ensure:   present
    includepkgs: 'collectd* htop bash-completion-extras statsd python2-pip nagios-plugins-openmanage nagios-common perl-Config-Tiny perl-Crypt-DES perl-Digest* libuv nodejs* perl-Net-SNMP npm python-sqlite3dbm python-tzlocal python-cairocffi openssl* brotli* python2-backports-functools_lru_cache'
  postgres-10: # we need postgresql libs
    ensure: present

openstack_version: 'train'
