---
include:
  default:
    - profile::dns::ns
    - profile::logging::rsyslog::client

# This is the resolving name server
profile::dns::ns::authoritative: false

profile::base::network::manage_dummy: true
profile::base::common::manage_cron: true

# DNS server addresses (used by file templates)
profile::dns::ns::admin_mgmt_addr:          "%{hiera('netcfg_mgmt_netpart')}.11"
profile::dns::ns::ns_mgmt_addr:             "%{hiera('netcfg_mgmt_netpart')}.16"
profile::dns::ns::resolver1_mgmt_addr:      "%{hiera('netcfg_mgmt_netpart')}.17"
profile::dns::ns::resolver2_mgmt_addr:      "%{hiera('netcfg_mgmt_netpart')}.18"
profile::dns::ns::ns_transport_addr:        "%{hiera('service__address__ns')}"
profile::dns::ns::resolver1_transport_addr: "%{hiera('service__address__resolver_01')}"
profile::dns::ns::resolver2_transport_addr: "%{hiera('service__address__resolver_02')}"
profile::dns::ns::ns_public_addr:           "%{hiera('public__ip__ns')}"
profile::dns::ns::ns_public6_addr:          "%{hiera('public__ipv6__ns')}"
profile::dns::ns::resolver1_public_addr:    "%{hiera('public__ip__resolver')}"
profile::dns::ns::resolver1_public6_addr:   "%{hiera('public__ipv6__resolver')}"

# DNS server firewall configuration
profile::dns::ns::manage_firewall: true
profile::dns::ns::firewall_extras:
  source: "%{::network_trp1}/%{::netmask_trp1}"

# Turn on SELinux
profile::base::selinux::manage_selinux: true

profile::dns::ns::allowed_nets:
  - '172.16.0.0/12;         # internal rfc1918'
  - '192.168.0.0/16;        # vagrant and localXY public (rfc1918)'

# For anycast
profile::dns::ns::enable_bird:           true
profile::dns::ns::manage_bird_firewall:  true
profile::dns::ns::enable_bird6:          true
profile::dns::ns::manage_bird6_firewall: true
profile::dns::ns::check_named_health:    true

profile::base::network::routes:
  'eth1':
    'ipaddress': [ '0.0.0.0', ]
    'netmask':   [ '0.0.0.0', ]
    'gateway':   [ "%{hiera('netcfg_trp_gateway')}", ]
    'table':     [ 'anycast_return', ]
profile::base::network::routing_tables:
  'anycast_return':
    'table_id':  '250'
profile::base::network::rules:
  'dummy0':
    iprule: [ "from %{hiera('netcfg_anycast_dns')} lookup anycast_return", ]
