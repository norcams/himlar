---
include:
  default:
    - profile::storage::cephmon
    - profile::storage::cephmon_firewall
    - profile::logging::rsyslog::client
    - profile::monitoring::collectd # FIXME:monitor
    - profile::monitoring::telegraf
  bootstrap:
    - profile::storage::cephmon_firewall

# Enable ceph balancer plugin
profile::storage::cephmon::target_max_misplaced_ratio: '0.05'
profile::storage::cephmon::ceph_balancer_mode:         'upmap'
profile::storage::cephmon::ceph_balancer_active:       true

# collectd # FIXME:monitor
profile::monitoring::collectd::enable: true
collectd::plugin::ceph::daemons:
  - "ceph-mon.%{::hostname}"
#  - "ceph-mgr.%{::hostname}"
collectd::plugin::processes::processes:
  - "ceph-mon"
#  - "ceph-mgr"
collectd::plugin::interface::interfaces:
  - "%{::interface_trp1}"
  - "%{::interface_mgmt1}"
collectd::plugin::python::logtrace: true
collectd::plugin::python::interactive: false
collectd::plugin::python::modules:
    collectd_ceph_storage:
      config:
        - CephCluster: "ceph"
          CephRadosBench: "False"
          CephRadosBenchInterval: 60
          CephMONStats: "True"
          CephMONStatsInterval: 15
          CephOSDStats: "True"
          CephOSDStatsInterval: 15
          CephPGStats: "True"
          CephPGStatsInterval: 15
          CephPoolStats: "True"
          CephPoolStatsInterval: 15
profile::monitoring::collectd::plugins:
  - collectd::plugin::aggregation
  - collectd::plugin::cpu
  - collectd::plugin::disk
  - collectd::plugin::load # require two puppetruns to work with collectd 5.9
  - collectd::plugin::memory
  - collectd::plugin::ceph
  - collectd::plugin::python
  - collectd::plugin::interface
  - collectd::plugin::processes
  - collectd::plugin::write_graphite

# ceph config keys
ceph::profile::params::mon_key:     "%{hiera('ceph_storage_client_mon_key')}"
ceph::profile::params::mgr_key:     "%{hiera('ceph_storage_client_mgr_key')}"
ceph::profile::params::fsid:        "%{hiera('ceph_storage_client_fsid')}"

profile::storage::cephmon_firewall::manage_firewall:            true
profile::storage::cephmon_firewall::manage_dashboard_firewall:  "%{hiera('profile::storage::cephmon::manage_dashboard')}"

profile::base::common::packages:
  'redhat-lsb-core': {}
  'bash-completion': {}
  'jq': {}
  'python-collectd-ceph-storage': {}

accounts::users:
  'cinder':
    ensure: present
  'glance':
    ensure: present

accounts::usergroups:
  'cinder':
    - 'cinder'
  'glance':
    - 'glance'

accounts::accounts:
  'cinder':
    ensure: present
  'glance':
    ensure: present

# FIXME:sensu-go
profile::monitoring::sensu::agent::enable_go_agent:   true
profile::monitoring::sensu::agent::enable_agent:      false

# Influx
profile::monitoring::telegraf::enable_telegraf:     true
profile::monitoring::telegraf::outputs:
  influxdb_v2:
    options:
      - urls: ["https://%{hiera('mgmt__address__influx')}:8086"]
        tls_ca: '/etc/puppetlabs/puppet/ssl/certs/ca.pem'
        token: "%{hiera('influxdb_admin_token')}"
        organization: "%{hiera('profile::monitoring::influxdb::org')}"
        bucket: 'storage'
        insecure_skip_verify: true

profile::monitoring::telegraf::inputs:
  prometheus:
    options:
      - urls: ["http://%{::ipaddress_mgmt1}:9283/metrics"]
        metric_version: 2
  # ceph:
  #   options:
  #     - interval: '1m'
  #       socket_dir: "/var/run/ceph"
  #       ceph_binary: "/usr/bin/ceph"
  #       socket_suffix: "asok"
  #       mon_prefix: "ceph-mon"

# Sensu
sensu::agent::subscriptions:
  - 'base'
  - 'nodes'
  - 'metrics'
  - 'cephmon'

# Enable extra yum repo
profile::base::yumrepo::repo_hash:
  ceph-%{hiera('ceph_version')}:
    ensure: present
  ceph-%{hiera('ceph_version')}-noarch:
    ensure: present
  "%{operatingsystem}-AppStream":
    exclude: 'postgres'
  epel:
    ensure:   present
  influxdb:
    ensure: present

## enable Ceph dashboard
#profile::storage::cephmon::manage_dashboard:                    true
#profile::storage::cephmon::dashboard_password:                  "%{hiera('ceph_storage_dashboard_password')}"

# Create crush buckets
profile::storage::cephmon::create_crushbuckets: true

profile::storage::ceph_crushbucket::buckets:
  'storage':
    bucket_type:   'pod'
    bucket_parent: 'default'

profile::base::selinux::manage_selinux: true
profile::base::selinux::semodules:
  'collectd_cephmon':
    avc_file:   "collectd_cephmon.avc"
profile::base::selinux::boolean:
  'collectd_tcp_network_connect':
    ensure: 'on'
    persistent: true
  'daemons_enable_cluster_mode':
    ensure: 'on'
    persistent: true
