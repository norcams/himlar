---
rsyslog::manage_package:          true
rsyslog::purge_config_files:      true
rsyslog::override_default_config: true

#
# CLIENT
#

profile::logging::rsyslog::client::modules:
  imjournal:
    config:
      StateFile: 'imjournal.state'
      WorkAroundJournalBug: 'on'
  imuxsock: {}
  imfile: {}

profile::logging::rsyslog::client::global_config:
  workDirectory:
    value: '/var/lib/rsyslog'
  umask:
    value: '0000'
    type: legacy
    priority: 01
  FileCreateMode:
    value:  '0600'
    type:   'legacy'
    priority: 02
  DirCreateMode:
    value:  '0750'
    type:   'legacy'
    priority: 02
  ActionFileDefaultTemplate:
    value:  'RSYSLOG_TraditionalFileFormat'
    type:   'legacy'
    priority: 79
  ActionQueueFileName:
    value:  'queue' # unique name prefix for spool files
    priority: 79
    type: legacy
  ActionQueueMaxDiskSpace:
    value:   '1g' # spool space limit
    type: legacy
    priority: 79
  ActionQueueSaveOnShutdown:
    value:    'on' # save messages to disk on shutdown
    type: legacy
    priority: 79
  ActionQueueType:
    value:    'LinkedList' # run asynchronously
    type: legacy
    priority: 79
  ActionResumeRetryCount:
    value:    '-1' # infinety retries if host is down
    type: legacy
    priority: 79

profile::logging::rsyslog::client::legacy_config:
  log_everything_to_remote_server:
    key:    '*.*'
    value:  " @%{hiera('mgmt__address__logger')}:514;RSYSLOG_ForwardFormat"
  do_not_log_private_auth_msg:
    key:    '*.info;mail.none;authpriv.none;cron.none'
    value:  '/var/log/messages'
  auth_priv_log:
    key:    'authpriv.*'
    value:  '/var/log/secure'
  mail_log:
    key:    'mail.*'
    value:  '-/var/log/maillog'
  cron_log:
    key:    'cron.*'
    value:  '/var/log/cron'
  emerg_log:
    key:    '*.emerg'
    value:  ':omusrmsg:*'
  news_log:
    key:    'uucp,news.crit'
    value:  '/var/log/spooler'
  local_log:
    key:    'local7.*'
    value:  '/var/log/boot.log'

#
# SERVER
#

profile::logging::rsyslog::server::modules:
  imuxsock: {}
  imudp:
    config:
      threads:      2
      TimeRequery:  8
      batchSize:    128
  builtin:omfile:
    config:
      FileCreateMode: '0644'
      DirCreateMode:  '0755'

profile::logging::rsyslog::server::global_config:
  workDirectory:
    value: '/var/lib/rsyslog'
  umask:
    value: '0000'
    type: legacy
    priority: 01
  ActionFileDefaultTemplate:
    value:  'RSYSLOG_FileFormat'
    type:   'legacy'
    priority: 79

# Use UDP to receive remote logs
profile::logging::rsyslog::server::inputs:
  imudp:
    type: imudp
    config:
      port: '514'
      address: "%{ipaddress_mgmt1}"
      ruleset:  'remote_udp'


# This is the ruleset that write the logs to disk  under /opt/logs
profile::logging::rsyslog::server::rulesets:
  remote_udp:
    parameters:
      queue.type:                         'fixedArray'
      queue.size:                         250000
      queue.dequeueBatchSize:             4096
      queue.workerThreads:                2
      queue.workerThreadMinimumMessages:  60000
    rules:
      - action:
          name: 'nova'
          facility: 'local0.*'
          type: omfile
          config:
            template: 'OpenstackFileFormat'
            file: '/opt/log/nova.log'
      - action:
          name: 'horizon'
          facility: 'local1.*'
          type: omfile
          config:
            template: 'OpenstackFileFormat'
            file: '/opt/log/horizon.log'
      - action:
          name: 'keystone'
          facility: 'local2.*'
          type: omfile
          config:
            template: 'OpenstackFileFormat'
            file: '/opt/log/keystone.log'
      - action:
          name: 'glance'
          facility: 'local3.*'
          type: omfile
          config:
            template: 'OpenstackFileFormat'
            file: '/opt/log/glance.log'
      - action:
          name: 'cinder'
          facility: 'local4.*'
          type: omfile
          config:
            template: 'OpenstackFileFormat'
            file: '/opt/log/cinder.log'
      - action:
          name: 'neutron'
          facility: 'local5.*'
          type: omfile
          config:
            template: 'OpenstackFileFormat'
            file: '/opt/log/neutron.log'
      - action:
          name: 'norcams'
          facility: 'local6.*'
          type: omfile
          config:
            template: 'NorcamsFileFormat'
            file: '/opt/log/norcams.log'
            ioBufferSize:   '64k'
            flushOnTXEnd:   'off'
            asyncWriting:   'on'
      - action:
          name: 'syslog'
          facility: '*.*;local0.none;local1.none;local2.none;local3.none;local4.none;local5.none;local6.none'
          type: omfile
          config:
            template:       'SyslogFileFormat'
            dynaFile:       'dynaAllMessages'
            ioBufferSize:   '64k'
            flushOnTXEnd:   'off'
            asyncWriting:   'on'


profile::logging::rsyslog::server::templates:
  OpenstackFileFormat:
    type:   string
    string: "%TIMESTAMP:::date-rfc3339% %syslogpriority-text% %HOSTNAME% %syslogtag%%msg:::drop-last-lf%\\n"
  NorcamsFileFormat:
    type:   string
    string: "%TIMESTAMP:::date-rfc3339% %syslogpriority-text% %HOSTNAME% %syslogtag%%msg:::drop-last-lf%\\n"
  SyslogFileFormat:
    type:   string
    string: "%TIMESTAMP:::date-rfc3339% %pri-text% %HOSTNAME% %syslogtag%%msg:::drop-last-lf%\\n"
  dynaAllMessages:
    type:   string
    string: "/opt/log/%hostname%/messages"

# Just use local logging for the client logs for the server itself
profile::logging::rsyslog::server::legacy_config:
  log_everything_to_remote_server:
    key:    '*.*'
    value:  " @%{hiera('mgmt__address__logger')}:514;RSYSLOG_ForwardFormat"
  do_not_log_private_auth_msg:
    key:    '*.info;mail.none;authpriv.none;cron.none'
    value:  '/var/log/messages'
  auth_priv_log:
    key:    'authpriv.*'
    value:  '/var/log/secure'
  mail_log:
    key:    'mail.*'
    value:  '-/var/log/maillog'
  cron_log:
    key:    'cron.*'
    value:  '/var/log/cron'
  emerg_log:
    key:    '*.emerg'
    value:  ':omusrmsg:*'
  news_log:
    key:    'uucp,news.crit'
    value:  '/var/log/spooler'
  local_log:
    key:    'local7.*'
    value:  '/var/log/boot.log'
