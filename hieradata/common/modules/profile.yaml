---
# Is this still needed?
# profile::base::common::manage_augeasproviders: true
profile::base::common::manage_epel:            false
profile::base::common::manage_accounts:        true
profile::base::common::manage_logging:         false
profile::base::common::manage_monitoring:      false
profile::base::common::manage_ssh:             true
profile::base::common::manage_ntp:             true
profile::base::common::manage_sudo:            true
profile::base::common::manage_authconfig:      false
profile::base::common::manage_timezones:       true
profile::base::common::manage_keyboard:        true
profile::base::common::manage_network:         true
profile::base::common::manage_packages:        true
profile::base::common::manage_yumrepo:         true
profile::base::common::manage_puppet:          true
profile::base::common::include_virtual:        true
profile::base::common::include_physical:       true
profile::base::firewall::manage_firewall:      true
profile::base::network::manage_hostname:       true
profile::base::network::http_proxy:            "%{hiera('mgmt__address__proxy')}:8888"
profile::base::network::http_proxy_profile:    '/root/proxy.sh'
profile::base::dell::manage_repos:             true
profile::base::dell::manage_openmanage:        true

profile::base::common::packages:
  'tcpdump': {}
  'tree': {}
  'htop': {}
  'vim-enhanced': {}
  'bind-utils': {}
  'nano': {}
  'yum-utils': {}
  'strace': {}
  'lsof': {}

# SSH only from mgmt
profile::firewall::pre::ssh_settings:
  source: "%{::network_mgmt1}/%{::netmask_mgmt1}"

profile::logging::rsyslog::client::manage_rsyslog:         true
profile::openstack::compute::hypervisor::manage_telemetry: false

# for db backup system (used by both login and mariadb profile)
profile::database::mariadb::backuptopdir:        '/var/db/dumps'
profile::database::mariadb::backupscript:        '/usr/local/sbin/mysqlbackup.sh'

profile::openstack::identity::ceilometer_enabled: true
profile::openstack::identity::cinder_enabled:     true
profile::openstack::identity::glance_enabled:     true
profile::openstack::identity::neutron_enabled:    true
profile::openstack::identity::nova_enabled:       true
profile::openstack::identity::gnocchi_enabled:    true
profile::openstack::identity::swift_enabled:      false
profile::openstack::identity::trove_enabled:      false

profile::openstack::image::api::backend: 'file'

profile::openstack::network::l2_driver: calico

profile::database::mariadb::manage_repo: false

profile::application::himlarcli::username:               'admin'
profile::application::himlarcli::auth_url:               "%{hiera('public__address__api')}"
profile::application::himlarcli::password:               "%{hiera('keystone_admin_password')}"
profile::application::himlarcli::region_name:            "%{::location}"
profile::application::himlarcli::tenant_name:            'openstack'
profile::application::himlarcli::default_domain:         'default'
profile::application::himlarcli::domain:                 "%{::domain}"
profile::application::himlarcli::foreman_url:            "https://%{::location}-admin-01.%{::domain}"
profile::application::himlarcli::foreman_user:           'admin'
profile::application::himlarcli::foreman_password:       "%{hiera('foreman::admin_password')}"
profile::application::himlarcli::statsd_server:          "%{hiera('mgmt__address__monitor')}"
profile::application::himlarcli::database_uri:           "mysql+pymysql://report:%{hiera('report_db_password')}@%{hiera('service__address__db_global')}/report"
profile::application::himlarcli::mq_host:                "%{hiera('service__address__rabbitmq_01')}"
profile::application::himlarcli::mq_username:            'himlarcli'
profile::application::himlarcli::mq_password:             "%{hiera('himlarcli_rabbit_password')}"
profile::application::himlarcli::mq_vhost:               'himlarcli'
profile::application::himlarcli::slack_webhook_url:      "%{hiera('himlarcli_slack_webhook')}"
profile::application::himlarcli::slack_user:             'iaas-status'
profile::application::himlarcli::slack_channel:          '#devtest'
profile::application::himlarcli::twitter_api_key:        "%{hiera('himlarcli_twitter_apikey')}"
profile::application::himlarcli::twitter_api_secret_key: "%{hiera('himlarcli_twitter_secretkey')}"
profile::application::himlarcli::twitter_access_token:   "%{hiera('himlarcli_twitter_accesstoken')}"
profile::application::himlarcli::twitter_secret_token:   "%{hiera('himlarcli_twitter_secrettoken')}"
profile::application::himlarcli::status_url:             "https://report.%{hiera('domain_frontend')}/api/v1/status"
profile::application::himlarcli::status_token:           "%{hiera('himlarcli_status_token')}"
profile::application::himlarcli::sensu_url:              "http://%{hiera('mgmt__address__monitor')}:4567"
profile::application::himlarcli::sensu_username:         'sensu'
profile::application::himlarcli::sensu_password:         "%{hiera('sensu_api_password')}"

profile::openstack::openrc::auth_url:     "%{hiera('public__address__api')}"
profile::openstack::openrc::password:     "%{hiera('keystone_admin_password')}"
profile::openstack::openrc::region_name:  "%{::location}"
profile::openstack::openrc::username:     'admin'
profile::openstack::openrc::project_name: 'openstack'

# All yum repos go here
yum_base_mirror:    'https://download.iaas.uio.no/uh-iaas/prod'
profile::base::yumrepo::repo_hash:
  CentOS-Base:
    descr:          'CentOS-$releasever - Base'
    baseurl:        "%{hiera('yum_base_mirror')}/centos-base/"
    gpgkey:         'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7'
    gpgcheck:       1
    exclude:        'dnsmasq'
  CentOS-Updates:
    descr:          'CentOS-$releasever - Updates'
    baseurl:        "%{hiera('yum_base_mirror')}/centos-updates/"
    gpgkey:         'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7'
    gpgcheck:       1
    exclude:        'dnsmasq'
  CentOS-Extras:
    descr:          'CentOS-$releasever - Extras'
    baseurl:        "%{hiera('yum_base_mirror')}/centos-extras/"
    gpgkey:         'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7'
    gpgcheck:       1
  puppetlabs:
    descr:          Puppetlabs Yum Repo
    baseurl:        "%{hiera('yum_base_mirror')}/puppetlabs-PC1/"
    gpgkey:         "%{hiera('yum_base_mirror')}/puppetlabs-PC1/RPM-GPG-KEY-puppet"
    gpgcheck:       1
  epel:
    descr:          "Extra Packages for Enterprise Linux %{operatingsystemmajrelease} - $basearch"
    baseurl:        "%{hiera('yum_base_mirror')}/epel"
    gpgkey:         'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7'
    exclude:        'zeromq python2-uritemplate python2-google-api-client' # FIXME when using RDO use whitelist includepkgs for EPEL!
  uh-iaas:
    descr:          'UH-IaaS repo'
    baseurl:        "%{hiera('yum_base_mirror')}/uh-iaas/"
    gpgcheck:       0
  sensu:
    descr:          'Sensu repo'
    baseurl:        "%{hiera('yum_base_mirror')}/sensu/"
    gpgcheck:       0
# Optional repos: enable them with ensure: present in common/role
  centos-qemu-ev:
    ensure:         absent
    descr:          "CentOS-QEMU-EV repository. See http://wiki.centos.org/SpecialInterestGroup/Virtualization"
    baseurl:        "%{hiera('yum_base_mirror')}/centos-qemu-ev"
    enabled:        1
    gpgcheck:       1
    gpgkey:         'https://www.centos.org/keys/RPM-GPG-KEY-CentOS-SIG-Virtualization'
  rdo-release:
    ensure:         absent
    descr:          "OpenStack %{hiera('openstack_version')} repository"
    baseurl:        "%{hiera('yum_base_mirror')}/rdo-%{hiera('openstack_version')}/"
    enabled:        1
    gpgcheck:       1
    gpgkey:         'file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Cloud'
    exclude:        'python2-bcrypt'
    #exclude:        'mariadb*' FIXME: this should be added after adding mariadb repo to all roles connecting to db
  calico:
    ensure:         absent
    descr:          'Calico Repository'
    baseurl:        "%{hiera('yum_base_mirror')}/calico/"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/calico/key"
  calico31:
    ensure:         absent
    descr:          'Calico31 Repository'
    baseurl:        "%{hiera('yum_base_mirror')}/calico31/"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/calico31/key"
  calico34:
    ensure:         absent
    descr:          'Calico 3.4 Repository'
    baseurl:        "%{hiera('yum_base_mirror')}/calico34/"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/calico34/key"
  ceph-%{hiera('ceph_version')}:
    ensure:         absent
    descr:          'Ceph packages'
    baseurl:        "%{hiera('yum_base_mirror')}/ceph-%{hiera('ceph_version')}/"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/ceph-%{hiera('ceph_version')}/release.asc"
  ceph-%{hiera('ceph_version')}-noarch:
    ensure:         absent
    descr:          'Ceph noarch packages'
    baseurl:        "%{hiera('yum_base_mirror')}/ceph-%{hiera('ceph_version')}-noarch/noarch"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/ceph-%{hiera('ceph_version')}-noarch/release.asc"
  logstash:
    ensure:         absent
    descr:          'Logstash Centos Repo'
    baseurl:        "%{hiera('yum_base_mirror')}/logstash/"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/logstash/GPG-KEY-elasticsearch"
  elasticsearch:
    ensure:         absent
    descr:          'Elasticsearch Centos Repo'
    baseurl:        "%{hiera('yum_base_mirror')}/elasticsearch/"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/elasticsearch/GPG-KEY-elasticsearch"
  curator5:
    ensure:         absent
    descr:          'Elasticsearch Curator 5.x Centos Repo'
    baseurl:        "%{hiera('yum_base_mirror')}/curator5/"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/curator/GPG-KEY-elasticsearch"
  foreman:
    ensure:         absent
    descr:          "Foreman %{hiera('foreman_version')} repo"
    baseurl:        "%{hiera('yum_base_mirror')}/foreman-%{hiera('foreman_version')}"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/foreman-%{hiera('foreman_version')}/RPM-GPG-KEY-foreman"
  foreman-plugins:
    ensure:         absent
    descr:          "Foreman %{hiera('foreman_version')} Plugins repo"
    baseurl:        "%{hiera('yum_base_mirror')}/foreman-plugins-%{hiera('foreman_version')}"
    enabled:        1
    gpgcheck:       0
  foreman-rails:
    ensure:         absent
    descr:          "Foreman %{hiera('foreman_version')} Rails repo"
    baseurl:        "%{hiera('yum_base_mirror')}/foreman-rails-%{hiera('foreman_version')}"
    enabled:        1
    gpgcheck:       0
  passenger:
    ensure:         absent
    descr:          "Passenger repo"
    baseurl:        "%{hiera('yum_base_mirror')}/passenger"
    enabled:        1
    gpgcheck:       0
  mariadb:
    ensure:         absent
    descr:          'MariaDB 10.1 repo'
    baseurl:        "%{hiera('yum_base_mirror')}/mariadb"
    gpgkey:         "%{hiera('yum_base_mirror')}/mariadb/RPM-GPG-KEY-MariaDB"
    gpgcheck:       '1'
  grafana:
    ensure:         absent
    descr:          'MariaDB 10.1 repo'
    baseurl:        "%{hiera('yum_base_mirror')}/grafana"
    gpgkey:         "%{hiera('yum_base_mirror')}/grafana/RPM-GPG-KEY-grafana"
    enabled:        1
    gpgcheck:       1

profile::base::dell::repo_hash:
  dell-system-update_dependent:
    descr:          "dell-system-update_dependent"
    baseurl:        "%{hiera('yum_base_mirror')}/dell-system-update_dependent"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/dell-system-update_dependent/public.key"
  dell-system-update_independent:
    descr:          "dell-system-update_independent"
    baseurl:        "%{hiera('yum_base_mirror')}/dell-system-update_independent"
    enabled:        1
    gpgcheck:       1
    gpgkey:         "%{hiera('yum_base_mirror')}/dell-system-update_independent/public.key"

profile::base::dell::packages:
  'srvadmin-all': {}
  'dell-system-update': {}
  'net-snmp': {}
  'compat-libstdc++-33.i686': {}
  'libstdc++.i686': {}
  'libxml2.i686': {}

# Turn on agant and add common sensu plugins
sensu_ssl_cachain: ''
profile::monitoring::sensu::agent::enable_agent: true
profile::monitoring::sensu::agent::plugins:
  sensu-plugins-disk-checks:
    type:         package
    pkg_version:  '3.0.1'
  sensu-plugins-load-checks:
    type:         package
    pkg_version:  '4.0.2'
  sensu-plugins-memory-checks:
    type:         package
    pkg_version:  '3.2.0'
  sensu-plugins-vmstats:
    type:         package
    pkg_version:  '1.0.0'
  sensu-plugins-process-checks:
    type:         package
    pkg_version:  '3.0.2'

consul::config_hash:
  'enable_syslog': true
  'bind_addr':     "%{ipaddress_mgmt1}"

# Disable reboot through Horizon (for other than root) until DHCP is fixed upstream (calico)
# Disable shelve functionality since it is broken (instances are not unshelved successfully)
profile::openstack::dashboard::policies:
  horizon_disable_reboot:
    file_path:  '/etc/openstack-dashboard/nova_policy.json'
    key:        'compute:reboot'
    value:      'role:admin'
  horizon_disable_shelve:
    file_path:  '/etc/openstack-dashboard/nova_policy.json'
    key:        'compute:shelve'
    value:      'role:admin'
  horizon_disable_shelve_extention:
    file_path:  '/etc/openstack-dashboard/nova_policy.json'
    key:        'compute_extension:shelve'
    value:      'role:admin'

# logrotate
profile::logging::logrotate::manage_logrotate:      true
logrotate::rules:
  syslog:
    path:           ['/var/log/cron', '/var/log/maillog', '/var/log/messages', '/var/log/secure', '/var/log/spooler']
    rotate:         10
    rotate_every:   daily
    postrotate:     '/bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true'
    dateext:        true
    sharedscripts:  true
    missingok:      true
    compress:       true
