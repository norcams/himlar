---
keystone::db::mysql::allowed_hosts:
  - "%{hiera('netcfg_trp_netpart')}.%"

keystone::database_connection:            "mysql+pymysql://keystone:%{hiera('keystone::db::mysql::password')}@%{hiera('service__address__db_global')}/keystone"
keystone::database_max_pool_size:         20
keystone::service_name:                   'httpd'
keystone::admin_password:                 "%{hiera('keystone_admin_password')}"
keystone::public_bind_host:               "%{ipaddress_trp1}"
keystone::admin_bind_host:                "%{ipaddress_trp1}"
keystone::enable_proxy_headers_parsing:   true
keystone::purge_config:                   true
keystone::enable_bootstrap:               true
keystone::admin_port:                     '35357' #default is changed to 5000 in rocky
keystone::public_port:                    '5000'

# cache
keystone::cache_enabled:                  true
keystone::cache_backend:                  'oslo_cache.memcache_pool'
keystone::cache_memcache_servers:         '127.0.0.1:11211'

# notification
keystone::notification_driver:            'messagingv2'
keystone::notification_format:            'cadf'
keystone::default_transport_url:          "%{hiera('service__transport__url')}"

keystone::token_provider:                 'fernet'
keystone::fernet_max_active_keys:         '3'
keystone::cron::fernet_rotate::minute:    '15'
keystone::cron::fernet_rotate::hour:      '3'
keystone::credential_key_repository:      '/etc/keystone/credential-keys'
keystone::fernet_key_repository:          '/etc/keystone/fernet-keys'
keystone::enable_fernet_setup:            true
keystone::enable_credential_setup:        true

# httpd
keystone::wsgi::apache::ssl:              false
keystone::wsgi::apache::bind_host:        "%{ipaddress_trp1}"
keystone::wsgi::apache::api_port:         ['5000', '35357']

# roles #FIXME Will be DEPRECATED. After train use keystone::bootstrap
keystone::roles::admin::email:                  "support@%{hiera('domain_frontend')}"
keystone::roles::admin::password:               "%{hiera('keystone_admin_password')}"
keystone::roles::admin::admin_tenant:           "%{hiera('keystone__admin__project')}"
keystone::roles::admin::service_tenant:         "%{hiera('keystone__service__project')}"
keystone::roles::admin::service_project_domain: "%{hiera('keystone__default__domain')}"

# endpoints
keystone::endpoint::region:               "%{location}"
keystone::endpoint::public_url:           "%{hiera('endpoint__identity__public')}"
keystone::endpoint::internal_url:         "%{hiera('endpoint__identity__internal')}"
keystone::endpoint::admin_url:            "%{hiera('endpoint__identity__admin')}"
keystone::endpoint::version:              "v3"

# Federation
keystone::federation::trusted_dashboards:  ["https://%{hiera('public__address__dashboard')}/dashboard/auth/websso/"]
keystone::federation::remote_id_attribute: 'OIDC-iss'

profile::openstack::identity::openidc::idp_name:  'dataporten'
profile::openstack::identity::openidc::methods:
  - 'password'
  - 'token'
  - 'openid'
#  - 'application_credential'
profile::openstack::identity::openidc::openidc_response_type:         'code'
profile::openstack::identity::openidc::openidc_provider_metadata_url: 'https://auth.dataporten.no/.well-known/openid-configuration'
profile::openstack::identity::openidc::openidc_client_id:             '00000000-0000-0000-0000-000000000000'
profile::openstack::identity::openidc::openidc_client_secret:         '00000000-0000-0000-0000-000000000000'
profile::openstack::identity::openidc::module_plugin:                 'keystone.auth.plugins.mapped.Mapped'
profile::openstack::identity::openidc::keystone_endpoint:             "%{hiera('endpoint__identity__public')}"

# override default policy
keystone::policy::policies:
  identity:get_user:
    key:    'identity:get_user'
    value:  'rule:admin_required or role:admin_view'
  identity:list_users:
    key:    'identity:list_users'
    value:  'rule:admin_required or role:admin_view'
  identity:list_domains:
    key:    'identity:list_domains'
    value:  'rule:admin_required or role:admin_view'
  # enable application_credential for admin only
  identity:get_application_credential:
    key:    'identity:get_application_credential'
    value:  'rule:admin_required'
  identity:list_application_credentials:
    key:    'identity:list_application_credentials'
    value:  'rule:admin_required'
  identity:create_application_credential:
    key:    'identity:create_application_credential'
    value:  'rule:admin_required'
  identity:delete_application_credential:
    key:    'identity:delete_application_credential'
    value:  'rule:admin_required'

# cron
keystone::cron::token_flush::maxdelay:    1800 # sek = 30 min

# logging
keystone::logging::log_facility:  'LOG_LOCAL2'
keystone::logging::use_syslog:    true
