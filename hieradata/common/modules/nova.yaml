---
# Shared config (nodes: novactrl, compute)
nova::db::database_connection:           "mysql+pymysql://nova:%{hiera('nova::db::mysql::password')}@%{hiera('service__address__db_regional')}/nova"
nova::db::api_database_connection:       "mysql+pymysql://nova_api:%{hiera('nova::db::mysql_api::password')}@%{hiera('service__address__db_regional')}/nova_api"
nova::glance_api_endpoint:               "%{hiera('endpoint__image__internal')}"
nova::cinder_catalog_info:               'volumev3:cinderv3:internalURL'
nova::os_region_name:                    "%{location}"

# logging
nova::logging::log_facility:              'LOG_LOCAL0'
nova::logging::use_syslog:                true

# rabbit mq (for rabbit_password see secrets)
nova::default_transport_url:
  "rabbit://nova:%{hiera('nova_rabbit_password')}@%{hiera('service__address__rabbitmq_01')}:5672,\
  nova:%{hiera('nova_rabbit_password')}@%{hiera('service__address__rabbitmq_02')}:5672,\
  nova:%{hiera('nova_rabbit_password')}@%{hiera('service__address__rabbitmq_03')}:5672/nova"

# mysql database (node: db)
nova::db::mysql::allowed_hosts:
  - "%{hiera('netcfg_trp_netpart')}.%"
nova::db::mysql_api::allowed_hosts:
  - "%{hiera('netcfg_trp_netpart')}.%"

# keystone auth (node: identity)
nova::keystone::auth::region:           "%{location}"
nova::keystone::auth::password:         "%{hiera('nova_api_password')}"
nova::keystone::auth::public_url:       "%{hiera('endpoint__compute__public')}/v2.1/"
nova::keystone::auth::admin_url:        "%{hiera('endpoint__compute__admin')}/v2.1/"
nova::keystone::auth::internal_url:     "%{hiera('endpoint__compute__internal')}/v2.1/"

# placement
nova::placement::username:                "nova"
nova::placement::auth_url:                "%{hiera('endpoint__identity__admin')}/v3"
nova::placement::region_name:             "%{location}"
nova::placement::password:                "%{hiera('nova_api_password')}"
nova::placement::valid_interface:         "internal"
nova::placement::project_domain_name:     "%{hiera('keystone__default__domain')}"
nova::placement::user_domain_name:        "%{hiera('keystone__default__domain')}"
nova::placement::project_name:            "%{hiera('keystone__service__project')}"

# api (node: novactrl)
nova::api::enabled_apis:                [ 'osapi_compute', ]
nova::api::enabled:                     true
#nova::api::api_bind_address:            "%{ipaddress_trp1}"
nova::api::service_name:                'httpd'
nova::api::allow_resize_to_same_host:   true

# nova wsgi
nova::wsgi::apache_api::ssl:        false
nova::wsgi::apache_api::bind_host:  "%{ipaddress_trp1}"
nova::wsgi::apache_api::threads:    1
nova::wsgi::apache_api::workers:    4
nova::wsgi::apache_api::custom_wsgi_process_options:
  maximum-requests: 1000

nova::cells::enabled: false

nova::keystone::authtoken::username:                'nova'
nova::keystone::authtoken::password:                "%{hiera('nova_api_password')}"
nova::keystone::authtoken::auth_url:                "%{hiera('endpoint__identity__admin')}/v3"
nova::keystone::authtoken::www_authenticate_uri:    "%{hiera('endpoint__identity__internal')}"
nova::keystone::authtoken::region_name:             "%{::location}"
nova::keystone::authtoken::auth_version:            'v3'
nova::keystone::authtoken::project_domain_name:     "%{hiera('keystone__default__domain')}"
nova::keystone::authtoken::user_domain_name:        "%{hiera('keystone__default__domain')}"
nova::keystone::authtoken::project_name:            "%{hiera('keystone__service__project')}"
nova::keystone::authtoken::memcached_servers:       '127.0.0.1:11211'
nova::keystone::authtoken::service_token_roles:   'admin'
nova::keystone::authtoken::service_token_roles_required: true

# scheduler (node: novactrl)
nova::cpu_allocation_ratio:                         '16'
nova::disk_allocation_ratio:                        '10'
nova::ram_allocation_ratio:                         '1.5'
nova::scheduler::enabled:                           true
nova::scheduler::filter::max_instances_per_host:    '120'
nova::scheduler::filter::scheduler_default_filters:
  - "NumInstancesFilter"
  - "AvailabilityZoneFilter"
  - "ComputeFilter"
  - "ComputeCapabilitiesFilter"
  - "ImagePropertiesFilter"
  - "ServerGroupAntiAffinityFilter"
  - "ServerGroupAffinityFilter"
  - "AggregateMultiTenancyIsolation"
  - "AggregateInstanceExtraSpecsFilter"
  - "NUMATopologyFilter"
  - "PciPassthroughFilter"

# conductor (node: novactrl)
nova::conductor::enabled: true

# availability zone in nova.conf (node: compute and novactrl)
nova::availability_zone::default_availability_zone:           "%{::location}-iaas-team-only-1"
nova::availability_zone::default_schedule_zone:               "%{::location}-default-1"
nova::availability_zone::internal_service_availability_zone:  'internal'

# neutron network (node: compute and novactrl)
nova::network::neutron::neutron_url:            "%{hiera('endpoint__network__internal')}" # will be removed in a future release
nova::network::neutron::neutron_auth_url:       "%{hiera('endpoint__identity__admin')}/v3"
nova::network::neutron::neutron_region_name:    "%{::location}"
nova::network::neutron::neutron_password:       "%{hiera('neutron_api_password')}"

# Use rsync, not ssh for migrate transport to support sparse images
nova::config::nova_config:
  libvirt/remote_filesystem_transport:
    value: 'rsync'
#  keystone_authtoken/service_token_roles_required: FIXME enable this when tested
#    value: true

# compute (node: compute)
nova::compute::enabled:                          true
nova::compute::resume_guests_state_on_host_boot: true
nova::compute::resize_confirm_window:            '1'
nova::compute::reserved_host_memory:             '4096'
nova::compute::rbd::libvirt_rbd_user:            'cinder'
nova::compute::rbd::libvirt_rbd_secret_uuid:     "%{hiera('libvirt_rbd_secret_uuid')}"
nova::compute::rbd::libvirt_images_rbd_pool:     'volumes'
nova::compute::rbd::rbd_keyring:                 'client.cinder'
nova::compute::rbd::ephemeral_storage:           false
nova::compute::rbd::manage_ceph_client:          false

# enable libvirt tunneled migration
#nova::migration::libvirt::live_migration_tunnelled:            true
nova::migration::libvirt::live_migration_inbound_addr:         "%{::ipaddress_live1}"
nova::migration::libvirt::live_migration_permit_auto_converge: true
nova::migration::libvirt::live_migration_permit_post_copy:     true

# set image properties hw_scsi_model=virtio-scsi and hw_disk_bus=scsi to enable
nova::compute::libvirt::libvirt_hw_disk_discard: 'unmap'

# migrate (node: compute)
nova::nova_public_key:
  type: ssh-rsa
  key:  'AAAAB3NzaC1yc2EAAAADAQABAAACAQDNf/1dxJVGduz08wT8bHzwbkIS0vevD//51wpObuLXubG67lQvEtzG0sAjoTO+hRJKP6poKDRkUVoEoYN0o9Lo4I36xYfYXV4ewrDLQgQwYKSzyMsK0VDHp1kbRvS2OOegW4CLa98Bt8zII/3Q/6uYJeYww/Y9IiwZ+TFWw3sDVfY6w37q24oBu3wCHGhWsAznrJ2+kqnx2TMzw3ewEk+N06jAmi+ygCLKtFNnO1+WBBngAgTvBvTcWmMod6YpwFk3m+vapKNwXf4IkY8cecdppgZ8aOiwOCiW6UIUnU1jnI+z+SAOtN+9s7NGR85nWAHSULHN/mRrHgnlMf9Wwfk/Yo1YCOihimCb0/sgNkja3MgsDCHsWhMwGUZwMWrnelnYi/7TkLOZvi1DHZrHF35QSdembm0oN2mTeLv1n2VxCZk8zxppwg6+xe/VKMy5YyKlBDza2iVgbvjW+jYps4+fxXFglKsCba1xsdwCq70R0VhVDVedFT2rbpF8pXQgEzq5+G1XyasPmSpkVs6wxzahFzYo4SiHF3m8BuDYspk1BF8e/tOoSAAkzn5/S7RE3iWWkxdnWHpyW9bbzlVShUVojv8BgxPHT4Fz5P7k1Q/REi3LRoD9GGrIVmbL+0/Iggtv0ql3LQLVLw6HsrBBmrs4JGLECFfxvMBDDzuXfp3FgQ=='
# fix for live migration with calico
nova::compute::live_migration_wait_for_vif_plug:  false

# console (node: compute)
# VNC
nova::compute::vnc_enabled: true
nova::compute::vncserver_proxyclient_address: "%{ipaddress_mgmt1}"
nova::compute::vncproxy_host: "console.%{hiera('domain_public')}"
nova::compute::vncproxy_protocol: 'https'
nova::compute::libvirt::vncserver_listen: "%{ipaddress_mgmt1}"
# SPICE
# nova::compute::vnc_enabled:                       false
# nova::compute::spice::server_proxyclient_address: "%{::ipaddress_trp1}"
# nova::compute::spice::proxy_host:                 "console.%{hiera('domain_public')}"
# nova::compute::spice::proxy_protocol:             'https'
# nova::compute::spice::server_listen:              "%{::ipaddress_trp1}"

# for telemetry reporting
nova::compute::instance_usage_audit:              true
nova::compute::instance_usage_audit_period:       'hour'
nova::notify_on_state_change:                     'vm_and_task_state'
nova::notification_driver:                        'messagingv2'
nova::notification_transport_url:                 "%{hiera('service__transport__url')}"
nova::notification_topics:                        'notifications' # not used before ocata
# FIXME: https://bugs.launchpad.net/ceilometer/+bug/1665449
# Could be changed to both in the future
nova::notification_format:                        'unversioned'

# Disable reboot through api until DHCP is fixed upstream (calico)
nova::policy::policies:
  nova_disable_reboot:
    key:   'os_compute_api:servers:reboot'
    value: 'role:admin'
  nova_compute_resize:
    key:   'os_compute_api:servers:resize'
    value: 'role:admin'
  nova_disable_shelve:
    key:   'os_compute_api:servers:shelve'
    value: 'role:admin'
  nova_create_zero_disk_flavor:
    key:   'os_compute_api:servers:create:zero_disk_flavor'
    value: 'role:imagebuilder'
