---
include:
  default:
    - profile::base::tuned
    - profile::monitoring::collectd

named_interfaces::config:
  mgmt:
    - p1p1
  trp:
    - team1
  live:
    - team1.120

profile::base::network::network_auto_opts:
  mgmt:
    'defroute': 'no'
  trp:
    'defroute': 'no'
    'ipv6init': 'yes'
    'devicetype': 'Team'
    'mtu': '9000'
    'team_config': >-
                   { "runner" : {  "name" : "lacp",  "active": true, "fast_rate" : true,
                   "tx_hash": ["eth", "ipv4", "ipv6"], "tx_balancer": { "name": "basic" } },
                   "link_watch" : {  "name" : "ethtool" } }
  live:
    'defroute': 'no'

profile::base::network::network_auto_bonding:
  trp:
    em1:
      'team_port_config': '{ "prio" : 100 }'
      'mtu': '9000'
    em2:
      'team_port_config': '{ "prio" : 100 }'
      'mtu': '9000'

# IPv6 is enabled for bgp, bfd
profile::openstack::network::calico::manage_firewall6: true

ntp::servers:
  - 172.28.0.100
  - 172.28.0.101
  - 172.28.0.102
chrony::servers:
  - "%{hiera('netcfg_mgmt_netpart')}.100"
  - "%{hiera('netcfg_mgmt_netpart')}.101"
  - "%{hiera('netcfg_mgmt_netpart')}.102"

# Add custom routing table for private network to NAT
profile::base::network::routes:
  'team1':
    'ipaddress': [ '0.0.0.0', '0.0.0.0', ]
    'netmask':   [ '0.0.0.0', '0.0.0.0', ]
    'gateway':   [ "%{hiera('netcfg_priv_gateway')}", "%{hiera('netcfg_trp_gateway')}" ]
    'table':     [ 'private', 'main', ]
profile::base::network::routing_tables:
  'private':
    'table_id':  '240'
profile::base::network::rules:
  'team1':
    iprule: [ "from %{hiera('netcfg_priv_network')} lookup private", "from %{hiera('netcfg_elastic_cidr')} lookup private"  ]
profile::base::network::manage_neutron_blackhole:      true # FIXME - remove when el7 is gone
profile::network::interface::manage_neutron_blackhole: true

# remove when telemetry/ceilometer is up in all environments and move to common
# Disabled 2004-08-06 because polling/telemtry is broken at the moment
# profile::openstack::compute::manage_telemetry: true

# Set tuned profile to "virtual-host"
profile::base::tuned::manage_tuned:        true
profile::base::tuned::tuned_profile:      'virtual-host'
nova::compute::libvirt::hw_machine_type:  'x86_64=q35'
nova::compute::libvirt::cpu_models:      ['Haswell-noTSX-IBRS']

# collectd
profile::monitoring::collectd::enable: false
profile::monitoring::collectd::plugins:
  - collectd::plugin::aggregation
  - collectd::plugin::cpu
  - collectd::plugin::disk
  - collectd::plugin::load
  - collectd::plugin::memory
  - collectd::plugin::interface
  - collectd::plugin::write_graphite
  - collectd::plugin::virt
  - collectd::plugin::processes

collectd::plugin::virt::hostname_format:        'hostname'
collectd::plugin::virt::plugin_instance_format: 'uuid'

profile::base::physical::configure_bmc_nic:                       true
profile::openstack::compute::hypervisor::enable_dhcp_agent_check: true
profile::base::physical::enable_redfish_sensu_check:              true
profile::base::physical::enable_redfish_http_proxy:               true

# FIXME:sensu-go
profile::monitoring::sensu::agent::checks: {}
profile::base::common::packages:
  'gcc-c++': { ensure: absent }
  'make': { ensure: absent }

# sensuclassic
# profile::monitoring::sensu::agent::checks:
#   'redfish-check':
#     command:      '/usr/local/bin/redfish_check.sh'
#     interval:     1800
#     subscribers:  ['checks']
#   'dhcp-agent-check':
#     command:      '/usr/local/bin/calico_dhcp_agent_check.sh'
#     interval:     600
#     subscribers:  ['checks']
sensu::agent::service_env_vars:
  PATH: '/usr/local/bin:/bin:/usr/bin:/opt/puppetlabs/bin:/opt/sensu-plugins-ruby/embedded/bin'
  HTTPS_PROXY: "%{hiera('mgmt__address__proxy')}:8888"

calico::compute::felix_mtuIfacePattern: '^team*'

nova::config::nova_config:
  DEFAULT/metadata_workers:
    value: '4'
  libvirt/remote_filesystem_transport:
    value: 'rsync'
